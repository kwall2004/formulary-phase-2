//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Atlas.Formulary.DAL.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FormularyEntities : DbContext
    {
        public FormularyEntities()
            : base("name=FormularyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alert> Alert { get; set; }
        public virtual DbSet<AlertType> AlertType { get; set; }
        public virtual DbSet<Aprvl> Aprvl { get; set; }
        public virtual DbSet<AprvlType> AprvlType { get; set; }
        public virtual DbSet<CrtriaDtl> CrtriaDtl { get; set; }
        public virtual DbSet<CrtriaGrp> CrtriaGrp { get; set; }
        public virtual DbSet<CrtriaGrpCrtriaSet> CrtriaGrpCrtriaSet { get; set; }
        public virtual DbSet<CrtriaGrpType> CrtriaGrpType { get; set; }
        public virtual DbSet<CrtriaOperType> CrtriaOperType { get; set; }
        public virtual DbSet<CrtriaSet> CrtriaSet { get; set; }
        public virtual DbSet<CvrgPrptyType> CvrgPrptyType { get; set; }
        public virtual DbSet<DrugAttrType> DrugAttrType { get; set; }
        public virtual DbSet<DrugCatg> DrugCatg { get; set; }
        public virtual DbSet<DrugCatgCrtriaGrp> DrugCatgCrtriaGrp { get; set; }
        public virtual DbSet<DrugCatgCvrgPrpty> DrugCatgCvrgPrpty { get; set; }
        public virtual DbSet<DrugList> DrugList { get; set; }
        public virtual DbSet<DrugListAccessCtl> DrugListAccessCtl { get; set; }
        public virtual DbSet<DrugListDtl> DrugListDtl { get; set; }
        public virtual DbSet<DrugListDtlCrtriaGrp> DrugListDtlCrtriaGrp { get; set; }
        public virtual DbSet<DrugListDtlDrugAttr> DrugListDtlDrugAttr { get; set; }
        public virtual DbSet<DrugRefDb> DrugRefDb { get; set; }
        public virtual DbSet<DrugRefDbValQulfrType> DrugRefDbValQulfrType { get; set; }
        public virtual DbSet<DrugThrputcClsType> DrugThrputcClsType { get; set; }
        public virtual DbSet<Frmlry> Frmlry { get; set; }
        public virtual DbSet<FrmlryAccessCtl> FrmlryAccessCtl { get; set; }
        public virtual DbSet<FrmlryConfgPrpty> FrmlryConfgPrpty { get; set; }
        public virtual DbSet<FrmlryConfgPrptyType> FrmlryConfgPrptyType { get; set; }
        public virtual DbSet<FrmlryDrugList> FrmlryDrugList { get; set; }
        public virtual DbSet<FrmlryStat> FrmlryStat { get; set; }
        public virtual DbSet<FrmlryTier> FrmlryTier { get; set; }
        public virtual DbSet<Job> Job { get; set; }
        public virtual DbSet<JobJobStatType> JobJobStatType { get; set; }
        public virtual DbSet<JobStatType> JobStatType { get; set; }
        public virtual DbSet<JobType> JobType { get; set; }
        public virtual DbSet<LOB> LOB { get; set; }
        public virtual DbSet<StatType> StatType { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserGrp> UserGrp { get; set; }
        public virtual DbSet<UserGrpType> UserGrpType { get; set; }
        public virtual DbSet<UserRole> UserRole { get; set; }
        public virtual DbSet<UserUserGrp> UserUserGrp { get; set; }
        public virtual DbSet<UserUserRole> UserUserRole { get; set; }
        public virtual DbSet<ValQulfrType> ValQulfrType { get; set; }
        public virtual DbSet<systranschemas> systranschemas { get; set; }
        public virtual DbSet<vwDrugCatgCvrgPrpty> vwDrugCatgCvrgPrpty { get; set; }
        public virtual DbSet<FrmlryNotes> FrmlryNotes { get; set; }
        public virtual DbSet<CvrgPrptyPgm> CvrgPrptyPgm { get; set; }
        public virtual DbSet<CvrgPrptyPgmDtl> CvrgPrptyPgmDtl { get; set; }
        public virtual DbSet<CvrgPrptyPgmDtlCrtriaGrp> CvrgPrptyPgmDtlCrtriaGrp { get; set; }
        public virtual DbSet<CvrgPrptyPgmType> CvrgPrptyPgmType { get; set; }
        public virtual DbSet<PAPgm> PAPgm { get; set; }
        public virtual DbSet<StepThrpyPgm> StepThrpyPgm { get; set; }
    
        [DbFunction("FormularyEntities", "fnIntListToTable")]
        public virtual IQueryable<fnIntListToTable_Result> fnIntListToTable(string inString)
        {
            var inStringParameter = inString != null ?
                new ObjectParameter("inString", inString) :
                new ObjectParameter("inString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnIntListToTable_Result>("[FormularyEntities].[fnIntListToTable](@inString)", inStringParameter);
        }
    
        [DbFunction("FormularyEntities", "fnTextListPipeToTable")]
        public virtual IQueryable<fnTextListPipeToTable_Result> fnTextListPipeToTable(string inString)
        {
            var inStringParameter = inString != null ?
                new ObjectParameter("inString", inString) :
                new ObjectParameter("inString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnTextListPipeToTable_Result>("[FormularyEntities].[fnTextListPipeToTable](@inString)", inStringParameter);
        }
    
        [DbFunction("FormularyEntities", "fnTextListToTable")]
        public virtual IQueryable<fnTextListToTable_Result> fnTextListToTable(string inString)
        {
            var inStringParameter = inString != null ?
                new ObjectParameter("inString", inString) :
                new ObjectParameter("inString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnTextListToTable_Result>("[FormularyEntities].[fnTextListToTable](@inString)", inStringParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spAlert_CustomNDC_Put(Nullable<System.Guid> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAlert_CustomNDC_Put", batchIdParameter);
        }
    
        public virtual int spAudit_Put()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAudit_Put");
        }
    
        public virtual ObjectResult<spCombineRules_Update_Result> spCombineRules_Update(Nullable<long> frmlrySK, string userId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCombineRules_Update_Result>("spCombineRules_Update", frmlrySKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spCoverageProperties_Get_Result> spCoverageProperties_Get(Nullable<long> drugCatg)
        {
            var drugCatgParameter = drugCatg.HasValue ?
                new ObjectParameter("DrugCatg", drugCatg) :
                new ObjectParameter("DrugCatg", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCoverageProperties_Get_Result>("spCoverageProperties_Get", drugCatgParameter);
        }
    
        public virtual int spCoverageProperties_Put(Nullable<long> drugCatgSK, Nullable<bool> isCovered, Nullable<bool> isOverrideGenericCheck, Nullable<bool> isSpecialityDrug, Nullable<bool> isRestrictToPkgSize, Nullable<bool> isMedicareCarveOut, Nullable<bool> isMedicaidFeeScreen, Nullable<bool> isMaintenanceDrug, Nullable<int> extendedDaysSupply, Nullable<bool> isPARequired, Nullable<int> pAAgeLimitMin, Nullable<int> pAAgeLimitMax, string pAAgeLimitType, string pAName, Nullable<bool> isSTRequired, string sTName, Nullable<int> maxFillQty, Nullable<int> maxFillPerPeriod, string maxFillPeriodType, Nullable<int> qLFillQty, Nullable<int> qLFillPerPeriod, string qLFillPeriodType, Nullable<int> daysSupplyFillQty, Nullable<int> daysSupplyFillPerPeriod, string daysSupplyPeriodType, string gender, Nullable<int> ageLimitMin, Nullable<int> ageLimitMax, string ageLimitType, Nullable<int> maleAgeLimitMin, Nullable<int> maleAgeLimitMax, string maleAgeLimitType, Nullable<int> femaleAgeLimitMin, Nullable<int> femaleAgeLimitMax, string femaleAgeLimitType, string pDLStatus, string pDFMessage, string userNotes, string userId)
        {
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            var isCoveredParameter = isCovered.HasValue ?
                new ObjectParameter("IsCovered", isCovered) :
                new ObjectParameter("IsCovered", typeof(bool));
    
            var isOverrideGenericCheckParameter = isOverrideGenericCheck.HasValue ?
                new ObjectParameter("IsOverrideGenericCheck", isOverrideGenericCheck) :
                new ObjectParameter("IsOverrideGenericCheck", typeof(bool));
    
            var isSpecialityDrugParameter = isSpecialityDrug.HasValue ?
                new ObjectParameter("IsSpecialityDrug", isSpecialityDrug) :
                new ObjectParameter("IsSpecialityDrug", typeof(bool));
    
            var isRestrictToPkgSizeParameter = isRestrictToPkgSize.HasValue ?
                new ObjectParameter("IsRestrictToPkgSize", isRestrictToPkgSize) :
                new ObjectParameter("IsRestrictToPkgSize", typeof(bool));
    
            var isMedicareCarveOutParameter = isMedicareCarveOut.HasValue ?
                new ObjectParameter("IsMedicareCarveOut", isMedicareCarveOut) :
                new ObjectParameter("IsMedicareCarveOut", typeof(bool));
    
            var isMedicaidFeeScreenParameter = isMedicaidFeeScreen.HasValue ?
                new ObjectParameter("IsMedicaidFeeScreen", isMedicaidFeeScreen) :
                new ObjectParameter("IsMedicaidFeeScreen", typeof(bool));
    
            var isMaintenanceDrugParameter = isMaintenanceDrug.HasValue ?
                new ObjectParameter("IsMaintenanceDrug", isMaintenanceDrug) :
                new ObjectParameter("IsMaintenanceDrug", typeof(bool));
    
            var extendedDaysSupplyParameter = extendedDaysSupply.HasValue ?
                new ObjectParameter("ExtendedDaysSupply", extendedDaysSupply) :
                new ObjectParameter("ExtendedDaysSupply", typeof(int));
    
            var isPARequiredParameter = isPARequired.HasValue ?
                new ObjectParameter("IsPARequired", isPARequired) :
                new ObjectParameter("IsPARequired", typeof(bool));
    
            var pAAgeLimitMinParameter = pAAgeLimitMin.HasValue ?
                new ObjectParameter("PAAgeLimitMin", pAAgeLimitMin) :
                new ObjectParameter("PAAgeLimitMin", typeof(int));
    
            var pAAgeLimitMaxParameter = pAAgeLimitMax.HasValue ?
                new ObjectParameter("PAAgeLimitMax", pAAgeLimitMax) :
                new ObjectParameter("PAAgeLimitMax", typeof(int));
    
            var pAAgeLimitTypeParameter = pAAgeLimitType != null ?
                new ObjectParameter("PAAgeLimitType", pAAgeLimitType) :
                new ObjectParameter("PAAgeLimitType", typeof(string));
    
            var pANameParameter = pAName != null ?
                new ObjectParameter("PAName", pAName) :
                new ObjectParameter("PAName", typeof(string));
    
            var isSTRequiredParameter = isSTRequired.HasValue ?
                new ObjectParameter("IsSTRequired", isSTRequired) :
                new ObjectParameter("IsSTRequired", typeof(bool));
    
            var sTNameParameter = sTName != null ?
                new ObjectParameter("STName", sTName) :
                new ObjectParameter("STName", typeof(string));
    
            var maxFillQtyParameter = maxFillQty.HasValue ?
                new ObjectParameter("MaxFillQty", maxFillQty) :
                new ObjectParameter("MaxFillQty", typeof(int));
    
            var maxFillPerPeriodParameter = maxFillPerPeriod.HasValue ?
                new ObjectParameter("MaxFillPerPeriod", maxFillPerPeriod) :
                new ObjectParameter("MaxFillPerPeriod", typeof(int));
    
            var maxFillPeriodTypeParameter = maxFillPeriodType != null ?
                new ObjectParameter("MaxFillPeriodType", maxFillPeriodType) :
                new ObjectParameter("MaxFillPeriodType", typeof(string));
    
            var qLFillQtyParameter = qLFillQty.HasValue ?
                new ObjectParameter("QLFillQty", qLFillQty) :
                new ObjectParameter("QLFillQty", typeof(int));
    
            var qLFillPerPeriodParameter = qLFillPerPeriod.HasValue ?
                new ObjectParameter("QLFillPerPeriod", qLFillPerPeriod) :
                new ObjectParameter("QLFillPerPeriod", typeof(int));
    
            var qLFillPeriodTypeParameter = qLFillPeriodType != null ?
                new ObjectParameter("QLFillPeriodType", qLFillPeriodType) :
                new ObjectParameter("QLFillPeriodType", typeof(string));
    
            var daysSupplyFillQtyParameter = daysSupplyFillQty.HasValue ?
                new ObjectParameter("DaysSupplyFillQty", daysSupplyFillQty) :
                new ObjectParameter("DaysSupplyFillQty", typeof(int));
    
            var daysSupplyFillPerPeriodParameter = daysSupplyFillPerPeriod.HasValue ?
                new ObjectParameter("DaysSupplyFillPerPeriod", daysSupplyFillPerPeriod) :
                new ObjectParameter("DaysSupplyFillPerPeriod", typeof(int));
    
            var daysSupplyPeriodTypeParameter = daysSupplyPeriodType != null ?
                new ObjectParameter("DaysSupplyPeriodType", daysSupplyPeriodType) :
                new ObjectParameter("DaysSupplyPeriodType", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var ageLimitMinParameter = ageLimitMin.HasValue ?
                new ObjectParameter("AgeLimitMin", ageLimitMin) :
                new ObjectParameter("AgeLimitMin", typeof(int));
    
            var ageLimitMaxParameter = ageLimitMax.HasValue ?
                new ObjectParameter("AgeLimitMax", ageLimitMax) :
                new ObjectParameter("AgeLimitMax", typeof(int));
    
            var ageLimitTypeParameter = ageLimitType != null ?
                new ObjectParameter("AgeLimitType", ageLimitType) :
                new ObjectParameter("AgeLimitType", typeof(string));
    
            var maleAgeLimitMinParameter = maleAgeLimitMin.HasValue ?
                new ObjectParameter("MaleAgeLimitMin", maleAgeLimitMin) :
                new ObjectParameter("MaleAgeLimitMin", typeof(int));
    
            var maleAgeLimitMaxParameter = maleAgeLimitMax.HasValue ?
                new ObjectParameter("MaleAgeLimitMax", maleAgeLimitMax) :
                new ObjectParameter("MaleAgeLimitMax", typeof(int));
    
            var maleAgeLimitTypeParameter = maleAgeLimitType != null ?
                new ObjectParameter("MaleAgeLimitType", maleAgeLimitType) :
                new ObjectParameter("MaleAgeLimitType", typeof(string));
    
            var femaleAgeLimitMinParameter = femaleAgeLimitMin.HasValue ?
                new ObjectParameter("FemaleAgeLimitMin", femaleAgeLimitMin) :
                new ObjectParameter("FemaleAgeLimitMin", typeof(int));
    
            var femaleAgeLimitMaxParameter = femaleAgeLimitMax.HasValue ?
                new ObjectParameter("FemaleAgeLimitMax", femaleAgeLimitMax) :
                new ObjectParameter("FemaleAgeLimitMax", typeof(int));
    
            var femaleAgeLimitTypeParameter = femaleAgeLimitType != null ?
                new ObjectParameter("FemaleAgeLimitType", femaleAgeLimitType) :
                new ObjectParameter("FemaleAgeLimitType", typeof(string));
    
            var pDLStatusParameter = pDLStatus != null ?
                new ObjectParameter("PDLStatus", pDLStatus) :
                new ObjectParameter("PDLStatus", typeof(string));
    
            var pDFMessageParameter = pDFMessage != null ?
                new ObjectParameter("PDFMessage", pDFMessage) :
                new ObjectParameter("PDFMessage", typeof(string));
    
            var userNotesParameter = userNotes != null ?
                new ObjectParameter("UserNotes", userNotes) :
                new ObjectParameter("UserNotes", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCoverageProperties_Put", drugCatgSKParameter, isCoveredParameter, isOverrideGenericCheckParameter, isSpecialityDrugParameter, isRestrictToPkgSizeParameter, isMedicareCarveOutParameter, isMedicaidFeeScreenParameter, isMaintenanceDrugParameter, extendedDaysSupplyParameter, isPARequiredParameter, pAAgeLimitMinParameter, pAAgeLimitMaxParameter, pAAgeLimitTypeParameter, pANameParameter, isSTRequiredParameter, sTNameParameter, maxFillQtyParameter, maxFillPerPeriodParameter, maxFillPeriodTypeParameter, qLFillQtyParameter, qLFillPerPeriodParameter, qLFillPeriodTypeParameter, daysSupplyFillQtyParameter, daysSupplyFillPerPeriodParameter, daysSupplyPeriodTypeParameter, genderParameter, ageLimitMinParameter, ageLimitMaxParameter, ageLimitTypeParameter, maleAgeLimitMinParameter, maleAgeLimitMaxParameter, maleAgeLimitTypeParameter, femaleAgeLimitMinParameter, femaleAgeLimitMaxParameter, femaleAgeLimitTypeParameter, pDLStatusParameter, pDFMessageParameter, userNotesParameter, userIdParameter);
        }
    
        public virtual int spCoveragePropertyDetail_Put(Nullable<long> drugCatgSK, Nullable<long> cvrgPrptyTypeSK, string cvrgPrptyNewVal, string userId)
        {
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            var cvrgPrptyTypeSKParameter = cvrgPrptyTypeSK.HasValue ?
                new ObjectParameter("CvrgPrptyTypeSK", cvrgPrptyTypeSK) :
                new ObjectParameter("CvrgPrptyTypeSK", typeof(long));
    
            var cvrgPrptyNewValParameter = cvrgPrptyNewVal != null ?
                new ObjectParameter("CvrgPrptyNewVal", cvrgPrptyNewVal) :
                new ObjectParameter("CvrgPrptyNewVal", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCoveragePropertyDetail_Put", drugCatgSKParameter, cvrgPrptyTypeSKParameter, cvrgPrptyNewValParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spCustomNDC_Delete_Result> spCustomNDC_Delete(string nDC)
        {
            var nDCParameter = nDC != null ?
                new ObjectParameter("NDC", nDC) :
                new ObjectParameter("NDC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCustomNDC_Delete_Result>("spCustomNDC_Delete", nDCParameter);
        }
    
        public virtual ObjectResult<spCustomNDC_GetFormularies_Result> spCustomNDC_GetFormularies(string nDC)
        {
            var nDCParameter = nDC != null ?
                new ObjectParameter("NDC", nDC) :
                new ObjectParameter("NDC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCustomNDC_GetFormularies_Result>("spCustomNDC_GetFormularies", nDCParameter);
        }
    
        public virtual ObjectResult<spDashboard_Get_Result> spDashboard_Get(Nullable<bool> isActionable)
        {
            var isActionableParameter = isActionable.HasValue ?
                new ObjectParameter("IsActionable", isActionable) :
                new ObjectParameter("IsActionable", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDashboard_Get_Result>("spDashboard_Get", isActionableParameter);
        }
    
        public virtual int spDashboard_Put(Nullable<long> alertSK, string userId)
        {
            var alertSKParameter = alertSK.HasValue ?
                new ObjectParameter("AlertSK", alertSK) :
                new ObjectParameter("AlertSK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDashboard_Put", alertSKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spDrugCatg_CascadeDelete_Result> spDrugCatg_CascadeDelete(Nullable<long> drugCatgSK)
        {
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugCatg_CascadeDelete_Result>("spDrugCatg_CascadeDelete", drugCatgSKParameter);
        }
    
        public virtual ObjectResult<spDrugCatg_CascadeDeleteAll_Result> spDrugCatg_CascadeDeleteAll(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugCatg_CascadeDeleteAll_Result>("spDrugCatg_CascadeDeleteAll", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spDrugCatg_GetAll_Result> spDrugCatg_GetAll(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugCatg_GetAll_Result>("spDrugCatg_GetAll", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spDrugCatg_GetAllPaged_Result> spDrugCatg_GetAllPaged(Nullable<long> frmlrySK, Nullable<bool> isNewRequest, Nullable<int> startIndex, Nullable<int> count, string userId, Nullable<System.Guid> sessionId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var isNewRequestParameter = isNewRequest.HasValue ?
                new ObjectParameter("IsNewRequest", isNewRequest) :
                new ObjectParameter("IsNewRequest", typeof(bool));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugCatg_GetAllPaged_Result>("spDrugCatg_GetAllPaged", frmlrySKParameter, isNewRequestParameter, startIndexParameter, countParameter, userIdParameter, sessionIdParameter);
        }
    
        public virtual ObjectResult<spDrugCatgCrtriaGrp_Get_Result> spDrugCatgCrtriaGrp_Get(Nullable<long> drugCatgSK)
        {
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugCatgCrtriaGrp_Get_Result>("spDrugCatgCrtriaGrp_Get", drugCatgSKParameter);
        }
    
        public virtual int spDrugCatgCrtriaGrp_Put(Nullable<long> drugCatgSK, Nullable<long> frmlrySk, string criteriaName, Nullable<bool> cvrdInd, Nullable<long> frmlryTierSK, string userId, ObjectParameter drugCatgSK_Upd)
        {
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            var frmlrySkParameter = frmlrySk.HasValue ?
                new ObjectParameter("FrmlrySk", frmlrySk) :
                new ObjectParameter("FrmlrySk", typeof(long));
    
            var criteriaNameParameter = criteriaName != null ?
                new ObjectParameter("CriteriaName", criteriaName) :
                new ObjectParameter("CriteriaName", typeof(string));
    
            var cvrdIndParameter = cvrdInd.HasValue ?
                new ObjectParameter("CvrdInd", cvrdInd) :
                new ObjectParameter("CvrdInd", typeof(bool));
    
            var frmlryTierSKParameter = frmlryTierSK.HasValue ?
                new ObjectParameter("FrmlryTierSK", frmlryTierSK) :
                new ObjectParameter("FrmlryTierSK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDrugCatgCrtriaGrp_Put", drugCatgSKParameter, frmlrySkParameter, criteriaNameParameter, cvrdIndParameter, frmlryTierSKParameter, userIdParameter, drugCatgSK_Upd);
        }
    
        public virtual int spDrugCatgName_Get(Nullable<long> drugCatgSK, ObjectParameter drugCatgName)
        {
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDrugCatgName_Get", drugCatgSKParameter, drugCatgName);
        }
    
        public virtual int spDrugList_Finish(Nullable<long> drugListSK, string userId)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDrugList_Finish", drugListSKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spDrugList_FullTextSearch_Result> spDrugList_FullTextSearch(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugList_FullTextSearch_Result>("spDrugList_FullTextSearch", searchStringParameter);
        }
    
        public virtual ObjectResult<spDrugList_GetAccess_Result> spDrugList_GetAccess(Nullable<long> drugListSK)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugList_GetAccess_Result>("spDrugList_GetAccess", drugListSKParameter);
        }
    
        public virtual ObjectResult<spDrugList_GetAll_Result> spDrugList_GetAll(Nullable<bool> isIncludeInactive)
        {
            var isIncludeInactiveParameter = isIncludeInactive.HasValue ?
                new ObjectParameter("IsIncludeInactive", isIncludeInactive) :
                new ObjectParameter("IsIncludeInactive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugList_GetAll_Result>("spDrugList_GetAll", isIncludeInactiveParameter);
        }
    
        public virtual ObjectResult<spDrugList_GetFormularies_Result> spDrugList_GetFormularies(Nullable<long> drugListSK)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugList_GetFormularies_Result>("spDrugList_GetFormularies", drugListSKParameter);
        }
    
        public virtual ObjectResult<spDrugList_GetHeader_Result> spDrugList_GetHeader(Nullable<long> drugListSK)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugList_GetHeader_Result>("spDrugList_GetHeader", drugListSKParameter);
        }
    
        public virtual ObjectResult<spDrugList_GetOwner_Result> spDrugList_GetOwner(Nullable<long> drugListSK)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugList_GetOwner_Result>("spDrugList_GetOwner", drugListSKParameter);
        }
    
        public virtual ObjectResult<spDrugList_PutAccess_Result> spDrugList_PutAccess(Nullable<long> drugListSK, Nullable<System.DateTime> efctvStartDt, Nullable<System.DateTime> efctvEndDt, string accessUserGrpSk_List, Nullable<System.DateTimeOffset> inctvTs, Nullable<System.DateTimeOffset> delTs, string userId)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var efctvStartDtParameter = efctvStartDt.HasValue ?
                new ObjectParameter("EfctvStartDt", efctvStartDt) :
                new ObjectParameter("EfctvStartDt", typeof(System.DateTime));
    
            var efctvEndDtParameter = efctvEndDt.HasValue ?
                new ObjectParameter("EfctvEndDt", efctvEndDt) :
                new ObjectParameter("EfctvEndDt", typeof(System.DateTime));
    
            var accessUserGrpSk_ListParameter = accessUserGrpSk_List != null ?
                new ObjectParameter("AccessUserGrpSk_List", accessUserGrpSk_List) :
                new ObjectParameter("AccessUserGrpSk_List", typeof(string));
    
            var inctvTsParameter = inctvTs.HasValue ?
                new ObjectParameter("InctvTs", inctvTs) :
                new ObjectParameter("InctvTs", typeof(System.DateTimeOffset));
    
            var delTsParameter = delTs.HasValue ?
                new ObjectParameter("DelTs", delTs) :
                new ObjectParameter("DelTs", typeof(System.DateTimeOffset));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugList_PutAccess_Result>("spDrugList_PutAccess", drugListSKParameter, efctvStartDtParameter, efctvEndDtParameter, accessUserGrpSk_ListParameter, inctvTsParameter, delTsParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spDrugList_PutHeader_Result> spDrugList_PutHeader(Nullable<long> drugListSK, Nullable<long> lOBSK, Nullable<long> drugRefDbSK, string drugListName, Nullable<int> drugPostObsltAlwdDays, Nullable<bool> isAutoAddNewDrugs, Nullable<System.DateTime> efctvStartDt, Nullable<System.DateTime> efctvEndDt, Nullable<System.DateTimeOffset> inctvTs, Nullable<System.DateTimeOffset> delTs, string userId)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var lOBSKParameter = lOBSK.HasValue ?
                new ObjectParameter("LOBSK", lOBSK) :
                new ObjectParameter("LOBSK", typeof(long));
    
            var drugRefDbSKParameter = drugRefDbSK.HasValue ?
                new ObjectParameter("DrugRefDbSK", drugRefDbSK) :
                new ObjectParameter("DrugRefDbSK", typeof(long));
    
            var drugListNameParameter = drugListName != null ?
                new ObjectParameter("DrugListName", drugListName) :
                new ObjectParameter("DrugListName", typeof(string));
    
            var drugPostObsltAlwdDaysParameter = drugPostObsltAlwdDays.HasValue ?
                new ObjectParameter("DrugPostObsltAlwdDays", drugPostObsltAlwdDays) :
                new ObjectParameter("DrugPostObsltAlwdDays", typeof(int));
    
            var isAutoAddNewDrugsParameter = isAutoAddNewDrugs.HasValue ?
                new ObjectParameter("IsAutoAddNewDrugs", isAutoAddNewDrugs) :
                new ObjectParameter("IsAutoAddNewDrugs", typeof(bool));
    
            var efctvStartDtParameter = efctvStartDt.HasValue ?
                new ObjectParameter("EfctvStartDt", efctvStartDt) :
                new ObjectParameter("EfctvStartDt", typeof(System.DateTime));
    
            var efctvEndDtParameter = efctvEndDt.HasValue ?
                new ObjectParameter("EfctvEndDt", efctvEndDt) :
                new ObjectParameter("EfctvEndDt", typeof(System.DateTime));
    
            var inctvTsParameter = inctvTs.HasValue ?
                new ObjectParameter("InctvTs", inctvTs) :
                new ObjectParameter("InctvTs", typeof(System.DateTimeOffset));
    
            var delTsParameter = delTs.HasValue ?
                new ObjectParameter("DelTs", delTs) :
                new ObjectParameter("DelTs", typeof(System.DateTimeOffset));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugList_PutHeader_Result>("spDrugList_PutHeader", drugListSKParameter, lOBSKParameter, drugRefDbSKParameter, drugListNameParameter, drugPostObsltAlwdDaysParameter, isAutoAddNewDrugsParameter, efctvStartDtParameter, efctvEndDtParameter, inctvTsParameter, delTsParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spDrugList_PutOwner_Result> spDrugList_PutOwner(Nullable<long> drugListSK, Nullable<System.DateTime> efctvStartDt, Nullable<System.DateTime> efctvEndDt, Nullable<long> ownerUserGrpSk, Nullable<System.DateTimeOffset> inctvTs, Nullable<System.DateTimeOffset> delTs, string userId)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var efctvStartDtParameter = efctvStartDt.HasValue ?
                new ObjectParameter("EfctvStartDt", efctvStartDt) :
                new ObjectParameter("EfctvStartDt", typeof(System.DateTime));
    
            var efctvEndDtParameter = efctvEndDt.HasValue ?
                new ObjectParameter("EfctvEndDt", efctvEndDt) :
                new ObjectParameter("EfctvEndDt", typeof(System.DateTime));
    
            var ownerUserGrpSkParameter = ownerUserGrpSk.HasValue ?
                new ObjectParameter("OwnerUserGrpSk", ownerUserGrpSk) :
                new ObjectParameter("OwnerUserGrpSk", typeof(long));
    
            var inctvTsParameter = inctvTs.HasValue ?
                new ObjectParameter("InctvTs", inctvTs) :
                new ObjectParameter("InctvTs", typeof(System.DateTimeOffset));
    
            var delTsParameter = delTs.HasValue ?
                new ObjectParameter("DelTs", delTs) :
                new ObjectParameter("DelTs", typeof(System.DateTimeOffset));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugList_PutOwner_Result>("spDrugList_PutOwner", drugListSKParameter, efctvStartDtParameter, efctvEndDtParameter, ownerUserGrpSkParameter, inctvTsParameter, delTsParameter, userIdParameter);
        }
    
        public virtual int spDrugListCache_Copy(Nullable<long> drugListSK_From, Nullable<long> drugListSK_To)
        {
            var drugListSK_FromParameter = drugListSK_From.HasValue ?
                new ObjectParameter("DrugListSK_From", drugListSK_From) :
                new ObjectParameter("DrugListSK_From", typeof(long));
    
            var drugListSK_ToParameter = drugListSK_To.HasValue ?
                new ObjectParameter("DrugListSK_To", drugListSK_To) :
                new ObjectParameter("DrugListSK_To", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDrugListCache_Copy", drugListSK_FromParameter, drugListSK_ToParameter);
        }
    
        public virtual int spDrugListCache_Create(Nullable<long> drugListSK)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDrugListCache_Create", drugListSKParameter);
        }
    
        public virtual ObjectResult<spDrugListCopy_Put_Result> spDrugListCopy_Put(Nullable<long> drugListSK_From, string userId)
        {
            var drugListSK_FromParameter = drugListSK_From.HasValue ?
                new ObjectParameter("DrugListSK_From", drugListSK_From) :
                new ObjectParameter("DrugListSK_From", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListCopy_Put_Result>("spDrugListCopy_Put", drugListSK_FromParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spDrugListDtl_CascadeDelete_Result> spDrugListDtl_CascadeDelete(Nullable<long> drugListSK)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListDtl_CascadeDelete_Result>("spDrugListDtl_CascadeDelete", drugListSKParameter);
        }
    
        public virtual ObjectResult<spDrugListDtl_DeleteOne_Result> spDrugListDtl_DeleteOne(Nullable<long> drugListDetailSK)
        {
            var drugListDetailSKParameter = drugListDetailSK.HasValue ?
                new ObjectParameter("DrugListDetailSK", drugListDetailSK) :
                new ObjectParameter("DrugListDetailSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListDtl_DeleteOne_Result>("spDrugListDtl_DeleteOne", drugListDetailSKParameter);
        }
    
        public virtual ObjectResult<spDrugListDtl_GetAllPaged_Result> spDrugListDtl_GetAllPaged(Nullable<long> drugListSK, Nullable<bool> isNewRequest, Nullable<int> startIndex, Nullable<int> count, string userId, Nullable<System.Guid> sessionId)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var isNewRequestParameter = isNewRequest.HasValue ?
                new ObjectParameter("IsNewRequest", isNewRequest) :
                new ObjectParameter("IsNewRequest", typeof(bool));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListDtl_GetAllPaged_Result>("spDrugListDtl_GetAllPaged", drugListSKParameter, isNewRequestParameter, startIndexParameter, countParameter, userIdParameter, sessionIdParameter);
        }
    
        public virtual ObjectResult<spDrugListDtlCrtriaGrp_Get_Result> spDrugListDtlCrtriaGrp_Get(Nullable<long> drugListDtlSK)
        {
            var drugListDtlSKParameter = drugListDtlSK.HasValue ?
                new ObjectParameter("DrugListDtlSK", drugListDtlSK) :
                new ObjectParameter("DrugListDtlSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListDtlCrtriaGrp_Get_Result>("spDrugListDtlCrtriaGrp_Get", drugListDtlSKParameter);
        }
    
        public virtual int spDrugListDtlCrtriaGrp_Put(Nullable<long> drugListDtlSK, Nullable<long> drugListSk, string criteriaName, string userId)
        {
            var drugListDtlSKParameter = drugListDtlSK.HasValue ?
                new ObjectParameter("DrugListDtlSK", drugListDtlSK) :
                new ObjectParameter("DrugListDtlSK", typeof(long));
    
            var drugListSkParameter = drugListSk.HasValue ?
                new ObjectParameter("DrugListSk", drugListSk) :
                new ObjectParameter("DrugListSk", typeof(long));
    
            var criteriaNameParameter = criteriaName != null ?
                new ObjectParameter("CriteriaName", criteriaName) :
                new ObjectParameter("CriteriaName", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDrugListDtlCrtriaGrp_Put", drugListDtlSKParameter, drugListSkParameter, criteriaNameParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spDrugListImport_Put_Result> spDrugListImport_Put(Nullable<long> drugListSK, string userId)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListImport_Put_Result>("spDrugListImport_Put", drugListSKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spDrugListSearchFDBv2_Result> spDrugListSearchFDBv2(string whereCriteria, Nullable<long> bitmask, Nullable<long> formularySK, string orderByClasue, Nullable<int> startIndex, Nullable<int> count, string userId, Nullable<bool> criteriaChange, Nullable<int> eTC_ID, Nullable<System.Guid> sessionId, Nullable<long> drugListSK)
        {
            var whereCriteriaParameter = whereCriteria != null ?
                new ObjectParameter("WhereCriteria", whereCriteria) :
                new ObjectParameter("WhereCriteria", typeof(string));
    
            var bitmaskParameter = bitmask.HasValue ?
                new ObjectParameter("bitmask", bitmask) :
                new ObjectParameter("bitmask", typeof(long));
    
            var formularySKParameter = formularySK.HasValue ?
                new ObjectParameter("FormularySK", formularySK) :
                new ObjectParameter("FormularySK", typeof(long));
    
            var orderByClasueParameter = orderByClasue != null ?
                new ObjectParameter("OrderByClasue", orderByClasue) :
                new ObjectParameter("OrderByClasue", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var criteriaChangeParameter = criteriaChange.HasValue ?
                new ObjectParameter("CriteriaChange", criteriaChange) :
                new ObjectParameter("CriteriaChange", typeof(bool));
    
            var eTC_IDParameter = eTC_ID.HasValue ?
                new ObjectParameter("ETC_ID", eTC_ID) :
                new ObjectParameter("ETC_ID", typeof(int));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(System.Guid));
    
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListSearchFDBv2_Result>("spDrugListSearchFDBv2", whereCriteriaParameter, bitmaskParameter, formularySKParameter, orderByClasueParameter, startIndexParameter, countParameter, userIdParameter, criteriaChangeParameter, eTC_IDParameter, sessionIdParameter, drugListSKParameter);
        }
    
        public virtual ObjectResult<spDrugSearch_Export_Result> spDrugSearch_Export(string userId, Nullable<System.Guid> sessionId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugSearch_Export_Result>("spDrugSearch_Export", userIdParameter, sessionIdParameter);
        }
    
        public virtual ObjectResult<spDrugSourceFileHistory_Get_Result> spDrugSourceFileHistory_Get(Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugSourceFileHistory_Get_Result>("spDrugSourceFileHistory_Get", startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<spETCHierarchy_Get_Result> spETCHierarchy_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spETCHierarchy_Get_Result>("spETCHierarchy_Get");
        }
    
        public virtual int spFileImport_Start(string importFilePath, Nullable<int> batchTypeId, Nullable<long> frmlrySK, string userId)
        {
            var importFilePathParameter = importFilePath != null ?
                new ObjectParameter("ImportFilePath", importFilePath) :
                new ObjectParameter("ImportFilePath", typeof(string));
    
            var batchTypeIdParameter = batchTypeId.HasValue ?
                new ObjectParameter("BatchTypeId", batchTypeId) :
                new ObjectParameter("BatchTypeId", typeof(int));
    
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFileImport_Start", importFilePathParameter, batchTypeIdParameter, frmlrySKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spFmrlry_GetAprvlPrity_Result> spFmrlry_GetAprvlPrity(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFmrlry_GetAprvlPrity_Result>("spFmrlry_GetAprvlPrity", frmlrySKParameter);
        }
    
        public virtual int spFormulary_Delete(Nullable<long> frmlrySK, Nullable<System.DateTimeOffset> delTs)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var delTsParameter = delTs.HasValue ?
                new ObjectParameter("DelTs", delTs) :
                new ObjectParameter("DelTs", typeof(System.DateTimeOffset));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormulary_Delete", frmlrySKParameter, delTsParameter);
        }
    
        public virtual ObjectResult<spFormulary_ExportNDC_A_Result> spFormulary_ExportNDC_A(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_ExportNDC_A_Result>("spFormulary_ExportNDC_A", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormulary_ExportNDC_B_Result> spFormulary_ExportNDC_B(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_ExportNDC_B_Result>("spFormulary_ExportNDC_B", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormulary_ExportNDC_C_Result> spFormulary_ExportNDC_C(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_ExportNDC_C_Result>("spFormulary_ExportNDC_C", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormulary_ExportNDC_D_Result> spFormulary_ExportNDC_D(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_ExportNDC_D_Result>("spFormulary_ExportNDC_D", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormulary_FullTextSearch_Result> spFormulary_FullTextSearch(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_FullTextSearch_Result>("spFormulary_FullTextSearch", searchStringParameter);
        }
    
        public virtual ObjectResult<spFormulary_GetAccess_Result> spFormulary_GetAccess(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_GetAccess_Result>("spFormulary_GetAccess", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormulary_GetDrugLists_Result> spFormulary_GetDrugLists(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_GetDrugLists_Result>("spFormulary_GetDrugLists", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormulary_GetOwner_Result> spFormulary_GetOwner(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_GetOwner_Result>("spFormulary_GetOwner", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormulary_GetTierNames_Result> spFormulary_GetTierNames(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_GetTierNames_Result>("spFormulary_GetTierNames", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormulary_PutAccess_Result> spFormulary_PutAccess(Nullable<long> frmlrySK, string accessUserGrpSk_List, Nullable<System.DateTime> efctvStartDt, Nullable<System.DateTime> efctvEndDt, Nullable<System.DateTimeOffset> inctvTs, Nullable<System.DateTimeOffset> delTs, string userId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var accessUserGrpSk_ListParameter = accessUserGrpSk_List != null ?
                new ObjectParameter("AccessUserGrpSk_List", accessUserGrpSk_List) :
                new ObjectParameter("AccessUserGrpSk_List", typeof(string));
    
            var efctvStartDtParameter = efctvStartDt.HasValue ?
                new ObjectParameter("EfctvStartDt", efctvStartDt) :
                new ObjectParameter("EfctvStartDt", typeof(System.DateTime));
    
            var efctvEndDtParameter = efctvEndDt.HasValue ?
                new ObjectParameter("EfctvEndDt", efctvEndDt) :
                new ObjectParameter("EfctvEndDt", typeof(System.DateTime));
    
            var inctvTsParameter = inctvTs.HasValue ?
                new ObjectParameter("InctvTs", inctvTs) :
                new ObjectParameter("InctvTs", typeof(System.DateTimeOffset));
    
            var delTsParameter = delTs.HasValue ?
                new ObjectParameter("DelTs", delTs) :
                new ObjectParameter("DelTs", typeof(System.DateTimeOffset));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_PutAccess_Result>("spFormulary_PutAccess", frmlrySKParameter, accessUserGrpSk_ListParameter, efctvStartDtParameter, efctvEndDtParameter, inctvTsParameter, delTsParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spFormulary_PutDrugLists_Result> spFormulary_PutDrugLists(Nullable<long> frmlrySK, string drugListName_List, string userId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var drugListName_ListParameter = drugListName_List != null ?
                new ObjectParameter("DrugListName_List", drugListName_List) :
                new ObjectParameter("DrugListName_List", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_PutDrugLists_Result>("spFormulary_PutDrugLists", frmlrySKParameter, drugListName_ListParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spFormulary_PutOwner_Result> spFormulary_PutOwner(Nullable<long> frmlrySK, Nullable<long> ownerUserGrpSk, Nullable<System.DateTime> efctvStartDt, Nullable<System.DateTime> efctvEndDt, Nullable<System.DateTimeOffset> inctvTs, Nullable<System.DateTimeOffset> delTs, string userId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var ownerUserGrpSkParameter = ownerUserGrpSk.HasValue ?
                new ObjectParameter("OwnerUserGrpSk", ownerUserGrpSk) :
                new ObjectParameter("OwnerUserGrpSk", typeof(long));
    
            var efctvStartDtParameter = efctvStartDt.HasValue ?
                new ObjectParameter("EfctvStartDt", efctvStartDt) :
                new ObjectParameter("EfctvStartDt", typeof(System.DateTime));
    
            var efctvEndDtParameter = efctvEndDt.HasValue ?
                new ObjectParameter("EfctvEndDt", efctvEndDt) :
                new ObjectParameter("EfctvEndDt", typeof(System.DateTime));
    
            var inctvTsParameter = inctvTs.HasValue ?
                new ObjectParameter("InctvTs", inctvTs) :
                new ObjectParameter("InctvTs", typeof(System.DateTimeOffset));
    
            var delTsParameter = delTs.HasValue ?
                new ObjectParameter("DelTs", delTs) :
                new ObjectParameter("DelTs", typeof(System.DateTimeOffset));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_PutOwner_Result>("spFormulary_PutOwner", frmlrySKParameter, ownerUserGrpSkParameter, efctvStartDtParameter, efctvEndDtParameter, inctvTsParameter, delTsParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spFormulary_PutTierNames_Result> spFormulary_PutTierNames(Nullable<long> frmlrySK, string tierNbr_List, string tierName_List, string userId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var tierNbr_ListParameter = tierNbr_List != null ?
                new ObjectParameter("TierNbr_List", tierNbr_List) :
                new ObjectParameter("TierNbr_List", typeof(string));
    
            var tierName_ListParameter = tierName_List != null ?
                new ObjectParameter("TierName_List", tierName_List) :
                new ObjectParameter("TierName_List", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_PutTierNames_Result>("spFormulary_PutTierNames", frmlrySKParameter, tierNbr_ListParameter, tierName_ListParameter, userIdParameter);
        }
    
        public virtual int spFormularyCache_AddNDC(string nDC, Nullable<long> frmlrySK)
        {
            var nDCParameter = nDC != null ?
                new ObjectParameter("NDC", nDC) :
                new ObjectParameter("NDC", typeof(string));
    
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyCache_AddNDC", nDCParameter, frmlrySKParameter);
        }
    
        public virtual int spFormularyCache_Copy(Nullable<long> frmlrySK_From, Nullable<long> frmlrySK_To)
        {
            var frmlrySK_FromParameter = frmlrySK_From.HasValue ?
                new ObjectParameter("FrmlrySK_From", frmlrySK_From) :
                new ObjectParameter("FrmlrySK_From", typeof(long));
    
            var frmlrySK_ToParameter = frmlrySK_To.HasValue ?
                new ObjectParameter("FrmlrySK_To", frmlrySK_To) :
                new ObjectParameter("FrmlrySK_To", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyCache_Copy", frmlrySK_FromParameter, frmlrySK_ToParameter);
        }
    
        public virtual int spFormularyCache_Create(Nullable<long> formularySK)
        {
            var formularySKParameter = formularySK.HasValue ?
                new ObjectParameter("FormularySK", formularySK) :
                new ObjectParameter("FormularySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyCache_Create", formularySKParameter);
        }
    
        public virtual int spFormularyCache_CreateFromNDCImport(Nullable<int> formularySK, Nullable<int> importFormularyId, Nullable<int> importFormularyVer)
        {
            var formularySKParameter = formularySK.HasValue ?
                new ObjectParameter("FormularySK", formularySK) :
                new ObjectParameter("FormularySK", typeof(int));
    
            var importFormularyIdParameter = importFormularyId.HasValue ?
                new ObjectParameter("ImportFormularyId", importFormularyId) :
                new ObjectParameter("ImportFormularyId", typeof(int));
    
            var importFormularyVerParameter = importFormularyVer.HasValue ?
                new ObjectParameter("ImportFormularyVer", importFormularyVer) :
                new ObjectParameter("ImportFormularyVer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyCache_CreateFromNDCImport", formularySKParameter, importFormularyIdParameter, importFormularyVerParameter);
        }
    
        public virtual int spFormularyCache_Initialize(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyCache_Initialize", frmlrySKParameter);
        }
    
        public virtual int spFormularyCache_UpdateRule(Nullable<long> drugCatgSK, Nullable<long> frmlryTierSK)
        {
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            var frmlryTierSKParameter = frmlryTierSK.HasValue ?
                new ObjectParameter("FrmlryTierSK", frmlryTierSK) :
                new ObjectParameter("FrmlryTierSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyCache_UpdateRule", drugCatgSKParameter, frmlryTierSKParameter);
        }
    
        public virtual ObjectResult<spFormularyCompareFDB_Get_Result> spFormularyCompareFDB_Get(Nullable<long> frmlrySK_From, Nullable<long> frmlrySK_To, string sortColumnName, string cvrgPrptySKList)
        {
            var frmlrySK_FromParameter = frmlrySK_From.HasValue ?
                new ObjectParameter("FrmlrySK_From", frmlrySK_From) :
                new ObjectParameter("FrmlrySK_From", typeof(long));
    
            var frmlrySK_ToParameter = frmlrySK_To.HasValue ?
                new ObjectParameter("FrmlrySK_To", frmlrySK_To) :
                new ObjectParameter("FrmlrySK_To", typeof(long));
    
            var sortColumnNameParameter = sortColumnName != null ?
                new ObjectParameter("SortColumnName", sortColumnName) :
                new ObjectParameter("SortColumnName", typeof(string));
    
            var cvrgPrptySKListParameter = cvrgPrptySKList != null ?
                new ObjectParameter("CvrgPrptySKList", cvrgPrptySKList) :
                new ObjectParameter("CvrgPrptySKList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyCompareFDB_Get_Result>("spFormularyCompareFDB_Get", frmlrySK_FromParameter, frmlrySK_ToParameter, sortColumnNameParameter, cvrgPrptySKListParameter);
        }
    
        public virtual ObjectResult<spFormularyCopy_Put_Result> spFormularyCopy_Put(Nullable<long> formularySK_From, string userId, Nullable<bool> isNewVersion)
        {
            var formularySK_FromParameter = formularySK_From.HasValue ?
                new ObjectParameter("FormularySK_From", formularySK_From) :
                new ObjectParameter("FormularySK_From", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var isNewVersionParameter = isNewVersion.HasValue ?
                new ObjectParameter("IsNewVersion", isNewVersion) :
                new ObjectParameter("IsNewVersion", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyCopy_Put_Result>("spFormularyCopy_Put", formularySK_FromParameter, userIdParameter, isNewVersionParameter);
        }
    
        public virtual ObjectResult<spFormularyImport_Put_Result> spFormularyImport_Put(Nullable<long> frmlrySK, string userId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyImport_Put_Result>("spFormularyImport_Put", frmlrySKParameter, userIdParameter);
        }
    
        public virtual int spFormularyImportNDC_ClearPrior(Nullable<int> importFormularyId, Nullable<int> importFormularyVer)
        {
            var importFormularyIdParameter = importFormularyId.HasValue ?
                new ObjectParameter("ImportFormularyId", importFormularyId) :
                new ObjectParameter("ImportFormularyId", typeof(int));
    
            var importFormularyVerParameter = importFormularyVer.HasValue ?
                new ObjectParameter("ImportFormularyVer", importFormularyVer) :
                new ObjectParameter("ImportFormularyVer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyImportNDC_ClearPrior", importFormularyIdParameter, importFormularyVerParameter);
        }
    
        public virtual ObjectResult<spFormularyReview_AHFS_Result> spFormularyReview_AHFS(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyReview_AHFS_Result>("spFormularyReview_AHFS", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormularyReview_ETC_Result> spFormularyReview_ETC(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyReview_ETC_Result>("spFormularyReview_ETC", frmlrySKParameter);
        }
    
        public virtual int spFormularyReview_Init(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyReview_Init", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormularyReview_Rules_Result> spFormularyReview_Rules(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyReview_Rules_Result>("spFormularyReview_Rules", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormularyReview_Tiers_Result> spFormularyReview_Tiers(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyReview_Tiers_Result>("spFormularyReview_Tiers", frmlrySKParameter);
        }
    
        public virtual int spFormularyRules_ConvertToMedId(Nullable<long> frmlrySK, string userId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyRules_ConvertToMedId", frmlrySKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spFormularyValidation(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spFormularyValidation", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFrmlryApprove_Put_Result> spFrmlryApprove_Put(Nullable<long> frmlrySK, Nullable<int> aprvlTypePrity, string aprvlNotes, string userId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var aprvlTypePrityParameter = aprvlTypePrity.HasValue ?
                new ObjectParameter("AprvlTypePrity", aprvlTypePrity) :
                new ObjectParameter("AprvlTypePrity", typeof(int));
    
            var aprvlNotesParameter = aprvlNotes != null ?
                new ObjectParameter("AprvlNotes", aprvlNotes) :
                new ObjectParameter("AprvlNotes", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFrmlryApprove_Put_Result>("spFrmlryApprove_Put", frmlrySKParameter, aprvlTypePrityParameter, aprvlNotesParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spFrmlryReject_Put_Result> spFrmlryReject_Put(Nullable<long> frmlrySK, Nullable<int> aprvlTypePrity, string aprvlNotes, string userId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var aprvlTypePrityParameter = aprvlTypePrity.HasValue ?
                new ObjectParameter("AprvlTypePrity", aprvlTypePrity) :
                new ObjectParameter("AprvlTypePrity", typeof(int));
    
            var aprvlNotesParameter = aprvlNotes != null ?
                new ObjectParameter("AprvlNotes", aprvlNotes) :
                new ObjectParameter("AprvlNotes", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFrmlryReject_Put_Result>("spFrmlryReject_Put", frmlrySKParameter, aprvlTypePrityParameter, aprvlNotesParameter, userIdParameter);
        }
    
        public virtual int spFullTextDrugSearch_FDB(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFullTextDrugSearch_FDB", searchStringParameter);
        }
    
        public virtual ObjectResult<spFullTextDrugSearchExt_FDB_Result> spFullTextDrugSearchExt_FDB(string searchString, Nullable<long> smartSearchFieldSK)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var smartSearchFieldSKParameter = smartSearchFieldSK.HasValue ?
                new ObjectParameter("SmartSearchFieldSK", smartSearchFieldSK) :
                new ObjectParameter("SmartSearchFieldSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFullTextDrugSearchExt_FDB_Result>("spFullTextDrugSearchExt_FDB", searchStringParameter, smartSearchFieldSKParameter);
        }
    
        public virtual ObjectResult<spFullTextDrugSearchExt_Frmlry_Result> spFullTextDrugSearchExt_Frmlry(string searchString, Nullable<long> frmlrySK, Nullable<long> smartSearchFieldSK)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var smartSearchFieldSKParameter = smartSearchFieldSK.HasValue ?
                new ObjectParameter("SmartSearchFieldSK", smartSearchFieldSK) :
                new ObjectParameter("SmartSearchFieldSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFullTextDrugSearchExt_Frmlry_Result>("spFullTextDrugSearchExt_Frmlry", searchStringParameter, frmlrySKParameter, smartSearchFieldSKParameter);
        }
    
        public virtual int spGenerateNDCChanges(Nullable<System.Guid> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGenerateNDCChanges", batchIdParameter);
        }
    
        public virtual ObjectResult<spJob_GetMessages_Result> spJob_GetMessages(Nullable<long> operation_id)
        {
            var operation_idParameter = operation_id.HasValue ?
                new ObjectParameter("operation_id", operation_id) :
                new ObjectParameter("operation_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spJob_GetMessages_Result>("spJob_GetMessages", operation_idParameter);
        }
    
        public virtual int spJob_PutExportNDC(Nullable<long> jobTypeSK, Nullable<long> frmlrySK, string userId)
        {
            var jobTypeSKParameter = jobTypeSK.HasValue ?
                new ObjectParameter("JobTypeSK", jobTypeSK) :
                new ObjectParameter("JobTypeSK", typeof(long));
    
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spJob_PutExportNDC", jobTypeSKParameter, frmlrySKParameter, userIdParameter);
        }
    
        public virtual int spJob_PutImport(Nullable<long> jobTypeSK, string filePath, Nullable<long> frmlrySK, Nullable<long> drugListSK, string userId)
        {
            var jobTypeSKParameter = jobTypeSK.HasValue ?
                new ObjectParameter("JobTypeSK", jobTypeSK) :
                new ObjectParameter("JobTypeSK", typeof(long));
    
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spJob_PutImport", jobTypeSKParameter, filePathParameter, frmlrySKParameter, drugListSKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<string> spJobQueueUser_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spJobQueueUser_GetAll");
        }
    
        public virtual ObjectResult<spMissingNDC_Delete_Result> spMissingNDC_Delete(string nDC, string dataSource)
        {
            var nDCParameter = nDC != null ?
                new ObjectParameter("NDC", nDC) :
                new ObjectParameter("NDC", typeof(string));
    
            var dataSourceParameter = dataSource != null ?
                new ObjectParameter("DataSource", dataSource) :
                new ObjectParameter("DataSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMissingNDC_Delete_Result>("spMissingNDC_Delete", nDCParameter, dataSourceParameter);
        }
    
        public virtual ObjectResult<spMissingNDCGCN_Search_Result> spMissingNDCGCN_Search(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMissingNDCGCN_Search_Result>("spMissingNDCGCN_Search", searchStringParameter);
        }
    
        public virtual ObjectResult<spNDCChangeHistory_GetAll_Result> spNDCChangeHistory_GetAll(string nDC)
        {
            var nDCParameter = nDC != null ?
                new ObjectParameter("NDC", nDC) :
                new ObjectParameter("NDC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNDCChangeHistory_GetAll_Result>("spNDCChangeHistory_GetAll", nDCParameter);
        }
    
        public virtual ObjectResult<spNDCNotes_GetAll_Result> spNDCNotes_GetAll(string nDC)
        {
            var nDCParameter = nDC != null ?
                new ObjectParameter("NDC", nDC) :
                new ObjectParameter("NDC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNDCNotes_GetAll_Result>("spNDCNotes_GetAll", nDCParameter);
        }
    
        public virtual ObjectResult<spNDCNotes_Put_Result> spNDCNotes_Put(Nullable<long> nDCNoteSK, string nDC, string userId, string nDCNotes)
        {
            var nDCNoteSKParameter = nDCNoteSK.HasValue ?
                new ObjectParameter("NDCNoteSK", nDCNoteSK) :
                new ObjectParameter("NDCNoteSK", typeof(long));
    
            var nDCParameter = nDC != null ?
                new ObjectParameter("NDC", nDC) :
                new ObjectParameter("NDC", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var nDCNotesParameter = nDCNotes != null ?
                new ObjectParameter("NDCNotes", nDCNotes) :
                new ObjectParameter("NDCNotes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNDCNotes_Put_Result>("spNDCNotes_Put", nDCNoteSKParameter, nDCParameter, userIdParameter, nDCNotesParameter);
        }
    
        public virtual ObjectResult<spNewDrugsToMarket_FullText_Result> spNewDrugsToMarket_FullText(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNewDrugsToMarket_FullText_Result>("spNewDrugsToMarket_FullText", searchStringParameter);
        }
    
        public virtual ObjectResult<spNewDrugsToMarket_Get_Result> spNewDrugsToMarket_Get(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> thruDate, string drugType, Nullable<int> eTC_ID)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var thruDateParameter = thruDate.HasValue ?
                new ObjectParameter("ThruDate", thruDate) :
                new ObjectParameter("ThruDate", typeof(System.DateTime));
    
            var drugTypeParameter = drugType != null ?
                new ObjectParameter("DrugType", drugType) :
                new ObjectParameter("DrugType", typeof(string));
    
            var eTC_IDParameter = eTC_ID.HasValue ?
                new ObjectParameter("ETC_ID", eTC_ID) :
                new ObjectParameter("ETC_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNewDrugsToMarket_Get_Result>("spNewDrugsToMarket_Get", fromDateParameter, thruDateParameter, drugTypeParameter, eTC_IDParameter);
        }
    
        public virtual int spProcessDrugAdds(Nullable<System.Guid> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProcessDrugAdds", batchIdParameter);
        }
    
        public virtual ObjectResult<spReport_DrugSearchExport_Result> spReport_DrugSearchExport(string userId, Nullable<System.Guid> sessionId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReport_DrugSearchExport_Result>("spReport_DrugSearchExport", userIdParameter, sessionIdParameter);
        }
    
        public virtual ObjectResult<spReportCustomNDC_Export_Result> spReportCustomNDC_Export()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportCustomNDC_Export_Result>("spReportCustomNDC_Export");
        }
    
        public virtual ObjectResult<spReportDrugListExportNDC_Result> spReportDrugListExportNDC(Nullable<long> drugListSK)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportDrugListExportNDC_Result>("spReportDrugListExportNDC", drugListSKParameter);
        }
    
        public virtual ObjectResult<spReportFormulary_Result> spReportFormulary(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportFormulary_Result>("spReportFormulary", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spReportFormulary_PA_Result> spReportFormulary_PA(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportFormulary_PA_Result>("spReportFormulary_PA", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spReportFormularyCompare_Header_Result> spReportFormularyCompare_Header(Nullable<long> frmlrySK_From, Nullable<long> frmlrySK_To)
        {
            var frmlrySK_FromParameter = frmlrySK_From.HasValue ?
                new ObjectParameter("FrmlrySK_From", frmlrySK_From) :
                new ObjectParameter("FrmlrySK_From", typeof(long));
    
            var frmlrySK_ToParameter = frmlrySK_To.HasValue ?
                new ObjectParameter("FrmlrySK_To", frmlrySK_To) :
                new ObjectParameter("FrmlrySK_To", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportFormularyCompare_Header_Result>("spReportFormularyCompare_Header", frmlrySK_FromParameter, frmlrySK_ToParameter);
        }
    
        public virtual ObjectResult<spReportFormularyExport_Result> spReportFormularyExport(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportFormularyExport_Result>("spReportFormularyExport", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spReportFormularyExportNDC_Result> spReportFormularyExportNDC(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportFormularyExportNDC_Result>("spReportFormularyExportNDC", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spReportFormularyHeader_Result> spReportFormularyHeader(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportFormularyHeader_Result>("spReportFormularyHeader", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spReportFormularyId_Result> spReportFormularyId(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportFormularyId_Result>("spReportFormularyId", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spReportMissingNDC_Export_Result> spReportMissingNDC_Export()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportMissingNDC_Export_Result>("spReportMissingNDC_Export");
        }
    
        public virtual ObjectResult<spReportSections_Result> spReportSections(Nullable<long> rptFmtSK)
        {
            var rptFmtSKParameter = rptFmtSK.HasValue ?
                new ObjectParameter("RptFmtSK", rptFmtSK) :
                new ObjectParameter("RptFmtSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportSections_Result>("spReportSections", rptFmtSKParameter);
        }
    
        public virtual ObjectResult<spRuleCombination_Result> spRuleCombination(Nullable<long> frmlrySK, string userId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRuleCombination_Result>("spRuleCombination", frmlrySKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<string> spSSRS_Execute(Nullable<long> frmlrySK, string reportingServicesURL, string reportPath, string fileExportPath, string fileFormat)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var reportingServicesURLParameter = reportingServicesURL != null ?
                new ObjectParameter("ReportingServicesURL", reportingServicesURL) :
                new ObjectParameter("ReportingServicesURL", typeof(string));
    
            var reportPathParameter = reportPath != null ?
                new ObjectParameter("ReportPath", reportPath) :
                new ObjectParameter("ReportPath", typeof(string));
    
            var fileExportPathParameter = fileExportPath != null ?
                new ObjectParameter("FileExportPath", fileExportPath) :
                new ObjectParameter("FileExportPath", typeof(string));
    
            var fileFormatParameter = fileFormat != null ?
                new ObjectParameter("FileFormat", fileFormat) :
                new ObjectParameter("FileFormat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spSSRS_Execute", frmlrySKParameter, reportingServicesURLParameter, reportPathParameter, fileExportPathParameter, fileFormatParameter);
        }
    
        public virtual int utilFrmlry_CascadeDelete(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("utilFrmlry_CascadeDelete", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spCustomNDC_Update_Result> spCustomNDC_Update(Nullable<long> drugListSK, string nDC, string labelName, Nullable<decimal> unitPrice, Nullable<System.DateTime> dateToMarket)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var nDCParameter = nDC != null ?
                new ObjectParameter("NDC", nDC) :
                new ObjectParameter("NDC", typeof(string));
    
            var labelNameParameter = labelName != null ?
                new ObjectParameter("LabelName", labelName) :
                new ObjectParameter("LabelName", typeof(string));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            var dateToMarketParameter = dateToMarket.HasValue ?
                new ObjectParameter("DateToMarket", dateToMarket) :
                new ObjectParameter("DateToMarket", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCustomNDC_Update_Result>("spCustomNDC_Update", drugListSKParameter, nDCParameter, labelNameParameter, unitPriceParameter, dateToMarketParameter);
        }
    
        public virtual ObjectResult<spFormulariesForNDC_Get_Result> spFormulariesForNDC_Get(string nDC)
        {
            var nDCParameter = nDC != null ?
                new ObjectParameter("NDC", nDC) :
                new ObjectParameter("NDC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulariesForNDC_Get_Result>("spFormulariesForNDC_Get", nDCParameter);
        }
    
        public virtual int spFormulary_BackDateCheck(Nullable<long> frmlrySK, string userId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormulary_BackDateCheck", frmlrySKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spFormulary_ExportNDC_NewDrugs_Result> spFormulary_ExportNDC_NewDrugs(string batchId)
        {
            var batchIdParameter = batchId != null ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_ExportNDC_NewDrugs_Result>("spFormulary_ExportNDC_NewDrugs", batchIdParameter);
        }
    
        public virtual int spJob_PutExportNDC_NewNDC(Nullable<long> jobTypeSK, Nullable<System.Guid> batchId, string userId)
        {
            var jobTypeSKParameter = jobTypeSK.HasValue ?
                new ObjectParameter("JobTypeSK", jobTypeSK) :
                new ObjectParameter("JobTypeSK", typeof(long));
    
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(System.Guid));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spJob_PutExportNDC_NewNDC", jobTypeSKParameter, batchIdParameter, userIdParameter);
        }
    
        public virtual int spProcessDrugAdds_old(Nullable<System.Guid> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProcessDrugAdds_old", batchIdParameter);
        }
    
        public virtual ObjectResult<spFrmlryForNDC_GetAll_Result> spFrmlryForNDC_GetAll(string nDC)
        {
            var nDCParameter = nDC != null ?
                new ObjectParameter("NDC", nDC) :
                new ObjectParameter("NDC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFrmlryForNDC_GetAll_Result>("spFrmlryForNDC_GetAll", nDCParameter);
        }
    
        public virtual int spFormularyCache_UpdateRuleV2(Nullable<long> drugCatgSK, Nullable<long> frmlryTierSK)
        {
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            var frmlryTierSKParameter = frmlryTierSK.HasValue ?
                new ObjectParameter("FrmlryTierSK", frmlryTierSK) :
                new ObjectParameter("FrmlryTierSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyCache_UpdateRuleV2", drugCatgSKParameter, frmlryTierSKParameter);
        }
    
        public virtual ObjectResult<spDrugListDtl_DeleteAll_Result> spDrugListDtl_DeleteAll(Nullable<long> drugListSK)
        {
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListDtl_DeleteAll_Result>("spDrugListDtl_DeleteAll", drugListSKParameter);
        }
    
        public virtual ObjectResult<spDrugListSearchFDBv3_Result> spDrugListSearchFDBv3(string whereCriteria, Nullable<long> bitmask, Nullable<long> formularySK, string orderByClasue, Nullable<int> startIndex, Nullable<int> count, string userId, Nullable<bool> criteriaChange, Nullable<int> eTC_ID, Nullable<System.Guid> sessionId, Nullable<long> drugListSK, Nullable<long> drugCatgSK)
        {
            var whereCriteriaParameter = whereCriteria != null ?
                new ObjectParameter("WhereCriteria", whereCriteria) :
                new ObjectParameter("WhereCriteria", typeof(string));
    
            var bitmaskParameter = bitmask.HasValue ?
                new ObjectParameter("bitmask", bitmask) :
                new ObjectParameter("bitmask", typeof(long));
    
            var formularySKParameter = formularySK.HasValue ?
                new ObjectParameter("FormularySK", formularySK) :
                new ObjectParameter("FormularySK", typeof(long));
    
            var orderByClasueParameter = orderByClasue != null ?
                new ObjectParameter("OrderByClasue", orderByClasue) :
                new ObjectParameter("OrderByClasue", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var criteriaChangeParameter = criteriaChange.HasValue ?
                new ObjectParameter("CriteriaChange", criteriaChange) :
                new ObjectParameter("CriteriaChange", typeof(bool));
    
            var eTC_IDParameter = eTC_ID.HasValue ?
                new ObjectParameter("ETC_ID", eTC_ID) :
                new ObjectParameter("ETC_ID", typeof(int));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(System.Guid));
    
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListSearchFDBv3_Result>("spDrugListSearchFDBv3", whereCriteriaParameter, bitmaskParameter, formularySKParameter, orderByClasueParameter, startIndexParameter, countParameter, userIdParameter, criteriaChangeParameter, eTC_IDParameter, sessionIdParameter, drugListSKParameter, drugCatgSKParameter);
        }
    
        public virtual int spFormularyCache_UpdateDrugLists(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyCache_UpdateDrugLists", frmlrySKParameter);
        }
    
        public virtual int spFormularyCache_UpdateRuleV1(Nullable<long> drugCatgSK, Nullable<long> frmlryTierSK)
        {
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            var frmlryTierSKParameter = frmlryTierSK.HasValue ?
                new ObjectParameter("FrmlryTierSK", frmlryTierSK) :
                new ObjectParameter("FrmlryTierSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyCache_UpdateRuleV1", drugCatgSKParameter, frmlryTierSKParameter);
        }
    
        public virtual int spFormularyCacheStatusUpdate(Nullable<long> drugCatgSK, Nullable<long> cacheStatusSK, string cacheStatusDesc)
        {
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            var cacheStatusSKParameter = cacheStatusSK.HasValue ?
                new ObjectParameter("CacheStatusSK", cacheStatusSK) :
                new ObjectParameter("CacheStatusSK", typeof(long));
    
            var cacheStatusDescParameter = cacheStatusDesc != null ?
                new ObjectParameter("CacheStatusDesc", cacheStatusDesc) :
                new ObjectParameter("CacheStatusDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyCacheStatusUpdate", drugCatgSKParameter, cacheStatusSKParameter, cacheStatusDescParameter);
        }
    
        public virtual ObjectResult<spFormularyImport_PutOld_Result> spFormularyImport_PutOld(string batchId, string userId)
        {
            var batchIdParameter = batchId != null ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyImport_PutOld_Result>("spFormularyImport_PutOld", batchIdParameter, userIdParameter);
        }
    
        public virtual int spProcessDrugAddsV3(Nullable<System.Guid> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProcessDrugAddsV3", batchIdParameter);
        }
    
        public virtual ObjectResult<spReportFormularyExport_AtlasRule_Result> spReportFormularyExport_AtlasRule(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportFormularyExport_AtlasRule_Result>("spReportFormularyExport_AtlasRule", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFullTextDrugSearchExt_DrugList_Result> spFullTextDrugSearchExt_DrugList(string searchString, Nullable<long> drugListSK, Nullable<long> smartSearchFieldSK)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var smartSearchFieldSKParameter = smartSearchFieldSK.HasValue ?
                new ObjectParameter("SmartSearchFieldSK", smartSearchFieldSK) :
                new ObjectParameter("SmartSearchFieldSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFullTextDrugSearchExt_DrugList_Result>("spFullTextDrugSearchExt_DrugList", searchStringParameter, drugListSKParameter, smartSearchFieldSKParameter);
        }
    
        public virtual ObjectResult<spGPIHierarchy_Get_Result> spGPIHierarchy_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGPIHierarchy_Get_Result>("spGPIHierarchy_Get");
        }
    
        [DbFunction("FormularyEntities", "fnGetChildETCs")]
        public virtual IQueryable<Nullable<int>> fnGetChildETCs(Nullable<int> eTC_ID)
        {
            var eTC_IDParameter = eTC_ID.HasValue ?
                new ObjectParameter("ETC_ID", eTC_ID) :
                new ObjectParameter("ETC_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[FormularyEntities].[fnGetChildETCs](@ETC_ID)", eTC_IDParameter);
        }
    
        public virtual int sp_alterdiagram1(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram1", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram1(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram1", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram1(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram1", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition1_Result> sp_helpdiagramdefinition1(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition1_Result>("sp_helpdiagramdefinition1", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams1_Result> sp_helpdiagrams1(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams1_Result>("sp_helpdiagrams1", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram1(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram1", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams1");
        }
    
        public virtual int spCustomNDC_UpdateFromImport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCustomNDC_UpdateFromImport");
        }
    
        public virtual ObjectResult<spDrugListSearchFDBv4_Result> spDrugListSearchFDBv4(string whereCriteria, Nullable<long> bitmask, Nullable<long> formularySK, string orderByClasue, Nullable<int> startIndex, Nullable<int> count, string userId, Nullable<bool> criteriaChange, string eTC_ID, Nullable<System.Guid> sessionId, Nullable<long> drugListSK, Nullable<long> drugCatgSK)
        {
            var whereCriteriaParameter = whereCriteria != null ?
                new ObjectParameter("WhereCriteria", whereCriteria) :
                new ObjectParameter("WhereCriteria", typeof(string));
    
            var bitmaskParameter = bitmask.HasValue ?
                new ObjectParameter("bitmask", bitmask) :
                new ObjectParameter("bitmask", typeof(long));
    
            var formularySKParameter = formularySK.HasValue ?
                new ObjectParameter("FormularySK", formularySK) :
                new ObjectParameter("FormularySK", typeof(long));
    
            var orderByClasueParameter = orderByClasue != null ?
                new ObjectParameter("OrderByClasue", orderByClasue) :
                new ObjectParameter("OrderByClasue", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var criteriaChangeParameter = criteriaChange.HasValue ?
                new ObjectParameter("CriteriaChange", criteriaChange) :
                new ObjectParameter("CriteriaChange", typeof(bool));
    
            var eTC_IDParameter = eTC_ID != null ?
                new ObjectParameter("ETC_ID", eTC_ID) :
                new ObjectParameter("ETC_ID", typeof(string));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(System.Guid));
    
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListSearchFDBv4_Result>("spDrugListSearchFDBv4", whereCriteriaParameter, bitmaskParameter, formularySKParameter, orderByClasueParameter, startIndexParameter, countParameter, userIdParameter, criteriaChangeParameter, eTC_IDParameter, sessionIdParameter, drugListSKParameter, drugCatgSKParameter);
        }
    
        public virtual ObjectResult<spFDBClinicalData_Get_Result> spFDBClinicalData_Get(string nDC)
        {
            var nDCParameter = nDC != null ?
                new ObjectParameter("NDC", nDC) :
                new ObjectParameter("NDC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFDBClinicalData_Get_Result>("spFDBClinicalData_Get", nDCParameter);
        }
    
        public virtual int spFormularyCache_Create_V1(Nullable<long> formularySK)
        {
            var formularySKParameter = formularySK.HasValue ?
                new ObjectParameter("FormularySK", formularySK) :
                new ObjectParameter("FormularySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyCache_Create_V1", formularySKParameter);
        }
    
        public virtual int spFormularyCache_CreateV2(Nullable<long> formularySK)
        {
            var formularySKParameter = formularySK.HasValue ?
                new ObjectParameter("FormularySK", formularySK) :
                new ObjectParameter("FormularySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyCache_CreateV2", formularySKParameter);
        }
    
        public virtual ObjectResult<spFormularyCompareMS_Get_Result> spFormularyCompareMS_Get(Nullable<long> frmlrySK_From, Nullable<long> frmlrySK_To, string sortColumnName)
        {
            var frmlrySK_FromParameter = frmlrySK_From.HasValue ?
                new ObjectParameter("FrmlrySK_From", frmlrySK_From) :
                new ObjectParameter("FrmlrySK_From", typeof(long));
    
            var frmlrySK_ToParameter = frmlrySK_To.HasValue ?
                new ObjectParameter("FrmlrySK_To", frmlrySK_To) :
                new ObjectParameter("FrmlrySK_To", typeof(long));
    
            var sortColumnNameParameter = sortColumnName != null ?
                new ObjectParameter("SortColumnName", sortColumnName) :
                new ObjectParameter("SortColumnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyCompareMS_Get_Result>("spFormularyCompareMS_Get", frmlrySK_FromParameter, frmlrySK_ToParameter, sortColumnNameParameter);
        }
    
        public virtual ObjectResult<spFormularyReview_GPI_Result> spFormularyReview_GPI(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyReview_GPI_Result>("spFormularyReview_GPI", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormularyRules_ConvertToGPI_Result> spFormularyRules_ConvertToGPI(Nullable<long> frmlrySK, string userId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyRules_ConvertToGPI_Result>("spFormularyRules_ConvertToGPI", frmlrySKParameter, userIdParameter);
        }
    
        public virtual int spFrmlryTier_FixCvrd(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFrmlryTier_FixCvrd", frmlrySKParameter);
        }
    
        public virtual int spGenerateNDCChangesMedispan(Nullable<System.Guid> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGenerateNDCChangesMedispan", batchIdParameter);
        }
    
        public virtual int spMakeCoverageSummary(Nullable<bool> isOverrideGenericCheck, Nullable<bool> isSpecialityDrug, Nullable<bool> isRestrictToPkgSize, Nullable<bool> isMedicareCarveOut, Nullable<bool> isMedicaidFeeScreen, Nullable<bool> isMaintenanceDrug, Nullable<int> extendedDaysSupply, Nullable<bool> isPARequired, Nullable<int> pAAgeLimitMin, Nullable<int> pAAgeLimitMax, string pAAgeLimitType, string pAName, Nullable<bool> isSTRequired, string sTName, Nullable<int> maxFillQty, Nullable<int> maxFillPerPeriod, string maxFillPeriodType, Nullable<int> qLFillQty, Nullable<int> qLFillPerPeriod, string qLFillPeriodType, Nullable<int> daysSupplyFillQty, Nullable<int> daysSupplyFillPerPeriod, string daysSupplyPeriodType, string gender, Nullable<int> ageLimitMin, Nullable<int> ageLimitMax, string ageLimitType, Nullable<int> maleAgeLimitMin, Nullable<int> maleAgeLimitMax, string maleAgeLimitType, Nullable<int> femaleAgeLimitMin, Nullable<int> femaleAgeLimitMax, string femaleAgeLimitType, string pDLStatus, string pDFMessage, string userNotes, ObjectParameter cvrgPrptySummary)
        {
            var isOverrideGenericCheckParameter = isOverrideGenericCheck.HasValue ?
                new ObjectParameter("IsOverrideGenericCheck", isOverrideGenericCheck) :
                new ObjectParameter("IsOverrideGenericCheck", typeof(bool));
    
            var isSpecialityDrugParameter = isSpecialityDrug.HasValue ?
                new ObjectParameter("IsSpecialityDrug", isSpecialityDrug) :
                new ObjectParameter("IsSpecialityDrug", typeof(bool));
    
            var isRestrictToPkgSizeParameter = isRestrictToPkgSize.HasValue ?
                new ObjectParameter("IsRestrictToPkgSize", isRestrictToPkgSize) :
                new ObjectParameter("IsRestrictToPkgSize", typeof(bool));
    
            var isMedicareCarveOutParameter = isMedicareCarveOut.HasValue ?
                new ObjectParameter("IsMedicareCarveOut", isMedicareCarveOut) :
                new ObjectParameter("IsMedicareCarveOut", typeof(bool));
    
            var isMedicaidFeeScreenParameter = isMedicaidFeeScreen.HasValue ?
                new ObjectParameter("IsMedicaidFeeScreen", isMedicaidFeeScreen) :
                new ObjectParameter("IsMedicaidFeeScreen", typeof(bool));
    
            var isMaintenanceDrugParameter = isMaintenanceDrug.HasValue ?
                new ObjectParameter("IsMaintenanceDrug", isMaintenanceDrug) :
                new ObjectParameter("IsMaintenanceDrug", typeof(bool));
    
            var extendedDaysSupplyParameter = extendedDaysSupply.HasValue ?
                new ObjectParameter("ExtendedDaysSupply", extendedDaysSupply) :
                new ObjectParameter("ExtendedDaysSupply", typeof(int));
    
            var isPARequiredParameter = isPARequired.HasValue ?
                new ObjectParameter("IsPARequired", isPARequired) :
                new ObjectParameter("IsPARequired", typeof(bool));
    
            var pAAgeLimitMinParameter = pAAgeLimitMin.HasValue ?
                new ObjectParameter("PAAgeLimitMin", pAAgeLimitMin) :
                new ObjectParameter("PAAgeLimitMin", typeof(int));
    
            var pAAgeLimitMaxParameter = pAAgeLimitMax.HasValue ?
                new ObjectParameter("PAAgeLimitMax", pAAgeLimitMax) :
                new ObjectParameter("PAAgeLimitMax", typeof(int));
    
            var pAAgeLimitTypeParameter = pAAgeLimitType != null ?
                new ObjectParameter("PAAgeLimitType", pAAgeLimitType) :
                new ObjectParameter("PAAgeLimitType", typeof(string));
    
            var pANameParameter = pAName != null ?
                new ObjectParameter("PAName", pAName) :
                new ObjectParameter("PAName", typeof(string));
    
            var isSTRequiredParameter = isSTRequired.HasValue ?
                new ObjectParameter("IsSTRequired", isSTRequired) :
                new ObjectParameter("IsSTRequired", typeof(bool));
    
            var sTNameParameter = sTName != null ?
                new ObjectParameter("STName", sTName) :
                new ObjectParameter("STName", typeof(string));
    
            var maxFillQtyParameter = maxFillQty.HasValue ?
                new ObjectParameter("MaxFillQty", maxFillQty) :
                new ObjectParameter("MaxFillQty", typeof(int));
    
            var maxFillPerPeriodParameter = maxFillPerPeriod.HasValue ?
                new ObjectParameter("MaxFillPerPeriod", maxFillPerPeriod) :
                new ObjectParameter("MaxFillPerPeriod", typeof(int));
    
            var maxFillPeriodTypeParameter = maxFillPeriodType != null ?
                new ObjectParameter("MaxFillPeriodType", maxFillPeriodType) :
                new ObjectParameter("MaxFillPeriodType", typeof(string));
    
            var qLFillQtyParameter = qLFillQty.HasValue ?
                new ObjectParameter("QLFillQty", qLFillQty) :
                new ObjectParameter("QLFillQty", typeof(int));
    
            var qLFillPerPeriodParameter = qLFillPerPeriod.HasValue ?
                new ObjectParameter("QLFillPerPeriod", qLFillPerPeriod) :
                new ObjectParameter("QLFillPerPeriod", typeof(int));
    
            var qLFillPeriodTypeParameter = qLFillPeriodType != null ?
                new ObjectParameter("QLFillPeriodType", qLFillPeriodType) :
                new ObjectParameter("QLFillPeriodType", typeof(string));
    
            var daysSupplyFillQtyParameter = daysSupplyFillQty.HasValue ?
                new ObjectParameter("DaysSupplyFillQty", daysSupplyFillQty) :
                new ObjectParameter("DaysSupplyFillQty", typeof(int));
    
            var daysSupplyFillPerPeriodParameter = daysSupplyFillPerPeriod.HasValue ?
                new ObjectParameter("DaysSupplyFillPerPeriod", daysSupplyFillPerPeriod) :
                new ObjectParameter("DaysSupplyFillPerPeriod", typeof(int));
    
            var daysSupplyPeriodTypeParameter = daysSupplyPeriodType != null ?
                new ObjectParameter("DaysSupplyPeriodType", daysSupplyPeriodType) :
                new ObjectParameter("DaysSupplyPeriodType", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var ageLimitMinParameter = ageLimitMin.HasValue ?
                new ObjectParameter("AgeLimitMin", ageLimitMin) :
                new ObjectParameter("AgeLimitMin", typeof(int));
    
            var ageLimitMaxParameter = ageLimitMax.HasValue ?
                new ObjectParameter("AgeLimitMax", ageLimitMax) :
                new ObjectParameter("AgeLimitMax", typeof(int));
    
            var ageLimitTypeParameter = ageLimitType != null ?
                new ObjectParameter("AgeLimitType", ageLimitType) :
                new ObjectParameter("AgeLimitType", typeof(string));
    
            var maleAgeLimitMinParameter = maleAgeLimitMin.HasValue ?
                new ObjectParameter("MaleAgeLimitMin", maleAgeLimitMin) :
                new ObjectParameter("MaleAgeLimitMin", typeof(int));
    
            var maleAgeLimitMaxParameter = maleAgeLimitMax.HasValue ?
                new ObjectParameter("MaleAgeLimitMax", maleAgeLimitMax) :
                new ObjectParameter("MaleAgeLimitMax", typeof(int));
    
            var maleAgeLimitTypeParameter = maleAgeLimitType != null ?
                new ObjectParameter("MaleAgeLimitType", maleAgeLimitType) :
                new ObjectParameter("MaleAgeLimitType", typeof(string));
    
            var femaleAgeLimitMinParameter = femaleAgeLimitMin.HasValue ?
                new ObjectParameter("FemaleAgeLimitMin", femaleAgeLimitMin) :
                new ObjectParameter("FemaleAgeLimitMin", typeof(int));
    
            var femaleAgeLimitMaxParameter = femaleAgeLimitMax.HasValue ?
                new ObjectParameter("FemaleAgeLimitMax", femaleAgeLimitMax) :
                new ObjectParameter("FemaleAgeLimitMax", typeof(int));
    
            var femaleAgeLimitTypeParameter = femaleAgeLimitType != null ?
                new ObjectParameter("FemaleAgeLimitType", femaleAgeLimitType) :
                new ObjectParameter("FemaleAgeLimitType", typeof(string));
    
            var pDLStatusParameter = pDLStatus != null ?
                new ObjectParameter("PDLStatus", pDLStatus) :
                new ObjectParameter("PDLStatus", typeof(string));
    
            var pDFMessageParameter = pDFMessage != null ?
                new ObjectParameter("PDFMessage", pDFMessage) :
                new ObjectParameter("PDFMessage", typeof(string));
    
            var userNotesParameter = userNotes != null ?
                new ObjectParameter("UserNotes", userNotes) :
                new ObjectParameter("UserNotes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spMakeCoverageSummary", isOverrideGenericCheckParameter, isSpecialityDrugParameter, isRestrictToPkgSizeParameter, isMedicareCarveOutParameter, isMedicaidFeeScreenParameter, isMaintenanceDrugParameter, extendedDaysSupplyParameter, isPARequiredParameter, pAAgeLimitMinParameter, pAAgeLimitMaxParameter, pAAgeLimitTypeParameter, pANameParameter, isSTRequiredParameter, sTNameParameter, maxFillQtyParameter, maxFillPerPeriodParameter, maxFillPeriodTypeParameter, qLFillQtyParameter, qLFillPerPeriodParameter, qLFillPeriodTypeParameter, daysSupplyFillQtyParameter, daysSupplyFillPerPeriodParameter, daysSupplyPeriodTypeParameter, genderParameter, ageLimitMinParameter, ageLimitMaxParameter, ageLimitTypeParameter, maleAgeLimitMinParameter, maleAgeLimitMaxParameter, maleAgeLimitTypeParameter, femaleAgeLimitMinParameter, femaleAgeLimitMaxParameter, femaleAgeLimitTypeParameter, pDLStatusParameter, pDFMessageParameter, userNotesParameter, cvrgPrptySummary);
        }
    
        public virtual int spProcessDrugAddsMS(Nullable<System.Guid> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProcessDrugAddsMS", batchIdParameter);
        }
    
        public virtual int spProcessDrugAddsV4(Nullable<System.Guid> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProcessDrugAddsV4", batchIdParameter);
        }
    
        public virtual int spProcessDrugListAdds(Nullable<System.Guid> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProcessDrugListAdds", batchIdParameter);
        }
    
        public virtual int spProcessDrugListAddsMS(Nullable<System.Guid> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProcessDrugListAddsMS", batchIdParameter);
        }
    
        public virtual ObjectResult<spReportFormularyMissingFDB_Result> spReportFormularyMissingFDB(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportFormularyMissingFDB_Result>("spReportFormularyMissingFDB", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFullTextDrugSearchExt_FDB_P1_Result> spFullTextDrugSearchExt_FDB_P1(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFullTextDrugSearchExt_FDB_P1_Result>("spFullTextDrugSearchExt_FDB_P1", searchStringParameter);
        }
    
        public virtual ObjectResult<spFullTextDrugSearchExt_MS_Result> spFullTextDrugSearchExt_MS(string searchString, Nullable<long> smartSearchFieldSK)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var smartSearchFieldSKParameter = smartSearchFieldSK.HasValue ?
                new ObjectParameter("SmartSearchFieldSK", smartSearchFieldSK) :
                new ObjectParameter("SmartSearchFieldSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFullTextDrugSearchExt_MS_Result>("spFullTextDrugSearchExt_MS", searchStringParameter, smartSearchFieldSKParameter);
        }
    
        public virtual ObjectResult<spFullTextDrugSearchExt_FrmlryMS_Result> spFullTextDrugSearchExt_FrmlryMS(string searchString, Nullable<long> frmlrySK, Nullable<long> smartSearchFieldSK)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var smartSearchFieldSKParameter = smartSearchFieldSK.HasValue ?
                new ObjectParameter("SmartSearchFieldSK", smartSearchFieldSK) :
                new ObjectParameter("SmartSearchFieldSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFullTextDrugSearchExt_FrmlryMS_Result>("spFullTextDrugSearchExt_FrmlryMS", searchStringParameter, frmlrySKParameter, smartSearchFieldSKParameter);
        }
    
        public virtual ObjectResult<spCvrgPrptyType_GetAll_Result> spCvrgPrptyType_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCvrgPrptyType_GetAll_Result>("spCvrgPrptyType_GetAll");
        }
    
        public virtual ObjectResult<spReportMissingNDC_Export_Medispan_Result> spReportMissingNDC_Export_Medispan()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportMissingNDC_Export_Medispan_Result>("spReportMissingNDC_Export_Medispan");
        }
    
        public virtual ObjectResult<spDrugListSearchMedispan_Result> spDrugListSearchMedispan(string whereCriteria, Nullable<long> bitmask, Nullable<long> formularySK, string orderByClasue, Nullable<int> startIndex, Nullable<int> count, string userId, Nullable<bool> criteriaChange, string gPI, Nullable<System.Guid> sessionId, Nullable<long> drugListSK, Nullable<long> drugCatgSK)
        {
            var whereCriteriaParameter = whereCriteria != null ?
                new ObjectParameter("WhereCriteria", whereCriteria) :
                new ObjectParameter("WhereCriteria", typeof(string));
    
            var bitmaskParameter = bitmask.HasValue ?
                new ObjectParameter("bitmask", bitmask) :
                new ObjectParameter("bitmask", typeof(long));
    
            var formularySKParameter = formularySK.HasValue ?
                new ObjectParameter("FormularySK", formularySK) :
                new ObjectParameter("FormularySK", typeof(long));
    
            var orderByClasueParameter = orderByClasue != null ?
                new ObjectParameter("OrderByClasue", orderByClasue) :
                new ObjectParameter("OrderByClasue", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var criteriaChangeParameter = criteriaChange.HasValue ?
                new ObjectParameter("CriteriaChange", criteriaChange) :
                new ObjectParameter("CriteriaChange", typeof(bool));
    
            var gPIParameter = gPI != null ?
                new ObjectParameter("GPI", gPI) :
                new ObjectParameter("GPI", typeof(string));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(System.Guid));
    
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListSearchMedispan_Result>("spDrugListSearchMedispan", whereCriteriaParameter, bitmaskParameter, formularySKParameter, orderByClasueParameter, startIndexParameter, countParameter, userIdParameter, criteriaChangeParameter, gPIParameter, sessionIdParameter, drugListSKParameter, drugCatgSKParameter);
        }
    
        public virtual int spFormularyExportRules(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyExportRules", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spMissingNDCMedispan_Search_Result> spMissingNDCMedispan_Search(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMissingNDCMedispan_Search_Result>("spMissingNDCMedispan_Search", searchStringParameter);
        }
    
        public virtual ObjectResult<spNewDrugsToMarket_Medispan_Get_Result> spNewDrugsToMarket_Medispan_Get(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> thruDate, string drugType, string gPI)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var thruDateParameter = thruDate.HasValue ?
                new ObjectParameter("ThruDate", thruDate) :
                new ObjectParameter("ThruDate", typeof(System.DateTime));
    
            var drugTypeParameter = drugType != null ?
                new ObjectParameter("DrugType", drugType) :
                new ObjectParameter("DrugType", typeof(string));
    
            var gPIParameter = gPI != null ?
                new ObjectParameter("GPI", gPI) :
                new ObjectParameter("GPI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNewDrugsToMarket_Medispan_Get_Result>("spNewDrugsToMarket_Medispan_Get", fromDateParameter, thruDateParameter, drugTypeParameter, gPIParameter);
        }
    
        public virtual ObjectResult<spFullTextDrugSearchExt_DrugListMS_Result> spFullTextDrugSearchExt_DrugListMS(string searchString, Nullable<long> drugListSK, Nullable<long> smartSearchFieldSK)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var smartSearchFieldSKParameter = smartSearchFieldSK.HasValue ?
                new ObjectParameter("SmartSearchFieldSK", smartSearchFieldSK) :
                new ObjectParameter("SmartSearchFieldSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFullTextDrugSearchExt_DrugListMS_Result>("spFullTextDrugSearchExt_DrugListMS", searchStringParameter, drugListSKParameter, smartSearchFieldSKParameter);
        }
    
        public virtual ObjectResult<spFileFormat_GetAll_Result> spFileFormat_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFileFormat_GetAll_Result>("spFileFormat_GetAll");
        }
    
        public virtual ObjectResult<spFontSize_GetAll_Result> spFontSize_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFontSize_GetAll_Result>("spFontSize_GetAll");
        }
    
        public virtual ObjectResult<spLanguage_GetAll_Result> spLanguage_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLanguage_GetAll_Result>("spLanguage_GetAll");
        }
    
        public virtual int spReportFormularyCompare(Nullable<long> frmlrySK_From, Nullable<long> frmlrySK_To, string sortColumnName, string cvrgPrptySKList)
        {
            var frmlrySK_FromParameter = frmlrySK_From.HasValue ?
                new ObjectParameter("FrmlrySK_From", frmlrySK_From) :
                new ObjectParameter("FrmlrySK_From", typeof(long));
    
            var frmlrySK_ToParameter = frmlrySK_To.HasValue ?
                new ObjectParameter("FrmlrySK_To", frmlrySK_To) :
                new ObjectParameter("FrmlrySK_To", typeof(long));
    
            var sortColumnNameParameter = sortColumnName != null ?
                new ObjectParameter("SortColumnName", sortColumnName) :
                new ObjectParameter("SortColumnName", typeof(string));
    
            var cvrgPrptySKListParameter = cvrgPrptySKList != null ?
                new ObjectParameter("CvrgPrptySKList", cvrgPrptySKList) :
                new ObjectParameter("CvrgPrptySKList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReportFormularyCompare", frmlrySK_FromParameter, frmlrySK_ToParameter, sortColumnNameParameter, cvrgPrptySKListParameter);
        }
    
        public virtual ObjectResult<spReportMissingFDBDrugs_Export_Result> spReportMissingFDBDrugs_Export()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportMissingFDBDrugs_Export_Result>("spReportMissingFDBDrugs_Export");
        }
    
        public virtual ObjectResult<spSumRptCfgCvrgPrptyType_Get_Result> spSumRptCfgCvrgPrptyType_Get(Nullable<long> sumRptCfgSK)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptCfgCvrgPrptyType_Get_Result>("spSumRptCfgCvrgPrptyType_Get", sumRptCfgSKParameter);
        }
    
        public virtual int spSumRptCfgCvrgPrptyType_Post(Nullable<long> sumRptCfgSK, string userId)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSumRptCfgCvrgPrptyType_Post", sumRptCfgSKParameter, userIdParameter);
        }
    
        public virtual int spSumRptCfgCvrgPrptyType_Put(Nullable<long> sumRptCfgSK, Nullable<long> sumRptCfgCvrgPrptyTypeSK, string cvrgPrptyTypeCode, string cvrgPrptyTypeDesc, string userId)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            var sumRptCfgCvrgPrptyTypeSKParameter = sumRptCfgCvrgPrptyTypeSK.HasValue ?
                new ObjectParameter("SumRptCfgCvrgPrptyTypeSK", sumRptCfgCvrgPrptyTypeSK) :
                new ObjectParameter("SumRptCfgCvrgPrptyTypeSK", typeof(long));
    
            var cvrgPrptyTypeCodeParameter = cvrgPrptyTypeCode != null ?
                new ObjectParameter("CvrgPrptyTypeCode", cvrgPrptyTypeCode) :
                new ObjectParameter("CvrgPrptyTypeCode", typeof(string));
    
            var cvrgPrptyTypeDescParameter = cvrgPrptyTypeDesc != null ?
                new ObjectParameter("CvrgPrptyTypeDesc", cvrgPrptyTypeDesc) :
                new ObjectParameter("CvrgPrptyTypeDesc", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSumRptCfgCvrgPrptyType_Put", sumRptCfgSKParameter, sumRptCfgCvrgPrptyTypeSKParameter, cvrgPrptyTypeCodeParameter, cvrgPrptyTypeDescParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spSumRptCfgSctn_Add_Result> spSumRptCfgSctn_Add(Nullable<long> sumRptCfgSK, Nullable<long> sumRptSctnSK, string userId)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            var sumRptSctnSKParameter = sumRptSctnSK.HasValue ?
                new ObjectParameter("SumRptSctnSK", sumRptSctnSK) :
                new ObjectParameter("SumRptSctnSK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptCfgSctn_Add_Result>("spSumRptCfgSctn_Add", sumRptCfgSKParameter, sumRptSctnSKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spSumRptCfgSctn_GetSelected_Result> spSumRptCfgSctn_GetSelected(Nullable<long> sumRptCfgSK)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptCfgSctn_GetSelected_Result>("spSumRptCfgSctn_GetSelected", sumRptCfgSKParameter);
        }
    
        public virtual ObjectResult<spSumRptCfgSctn_GetUnselected_Result> spSumRptCfgSctn_GetUnselected(Nullable<long> sumRptCfgSK)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptCfgSctn_GetUnselected_Result>("spSumRptCfgSctn_GetUnselected", sumRptCfgSKParameter);
        }
    
        public virtual int spSumRptCfgSctn_Remove(Nullable<long> sumRptCfgSK, Nullable<long> sumRptSctnSK)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            var sumRptSctnSKParameter = sumRptSctnSK.HasValue ?
                new ObjectParameter("SumRptSctnSK", sumRptSctnSK) :
                new ObjectParameter("SumRptSctnSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSumRptCfgSctn_Remove", sumRptCfgSKParameter, sumRptSctnSKParameter);
        }
    
        public virtual ObjectResult<spTierDispl_GetAll_Result> spTierDispl_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTierDispl_GetAll_Result>("spTierDispl_GetAll");
        }
    
        public virtual ObjectResult<spJob_GetAll_Result> spJob_GetAll(string userId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> thruDate)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var thruDateParameter = thruDate.HasValue ?
                new ObjectParameter("ThruDate", thruDate) :
                new ObjectParameter("ThruDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spJob_GetAll_Result>("spJob_GetAll", userIdParameter, fromDateParameter, thruDateParameter);
        }
    
        public virtual int spFormularyCompareFDB_Get1(Nullable<long> frmlrySK_From, Nullable<long> frmlrySK_To, string sortColumnName, string cvrgPrptySKList)
        {
            var frmlrySK_FromParameter = frmlrySK_From.HasValue ?
                new ObjectParameter("FrmlrySK_From", frmlrySK_From) :
                new ObjectParameter("FrmlrySK_From", typeof(long));
    
            var frmlrySK_ToParameter = frmlrySK_To.HasValue ?
                new ObjectParameter("FrmlrySK_To", frmlrySK_To) :
                new ObjectParameter("FrmlrySK_To", typeof(long));
    
            var sortColumnNameParameter = sortColumnName != null ?
                new ObjectParameter("SortColumnName", sortColumnName) :
                new ObjectParameter("SortColumnName", typeof(string));
    
            var cvrgPrptySKListParameter = cvrgPrptySKList != null ?
                new ObjectParameter("CvrgPrptySKList", cvrgPrptySKList) :
                new ObjectParameter("CvrgPrptySKList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyCompareFDB_Get1", frmlrySK_FromParameter, frmlrySK_ToParameter, sortColumnNameParameter, cvrgPrptySKListParameter);
        }
    
        public virtual ObjectResult<spSumRptCfg_Post_Result> spSumRptCfg_Post(Nullable<long> frmlrySK, string userId)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptCfg_Post_Result>("spSumRptCfg_Post", frmlrySKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spSumRptCfg_Put_Result> spSumRptCfg_Put(Nullable<long> sumRptCfgSK, string sectionSKSortOrder_List, string sumRptCfgName, string sumRptCfgDesc, Nullable<long> fileFmtSK, Nullable<long> langSK, Nullable<long> fontSizeSK, Nullable<bool> inclUMInd, Nullable<bool> inclNotCvrdInd, Nullable<long> tierDisplSK, string userId)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            var sectionSKSortOrder_ListParameter = sectionSKSortOrder_List != null ?
                new ObjectParameter("SectionSKSortOrder_List", sectionSKSortOrder_List) :
                new ObjectParameter("SectionSKSortOrder_List", typeof(string));
    
            var sumRptCfgNameParameter = sumRptCfgName != null ?
                new ObjectParameter("SumRptCfgName", sumRptCfgName) :
                new ObjectParameter("SumRptCfgName", typeof(string));
    
            var sumRptCfgDescParameter = sumRptCfgDesc != null ?
                new ObjectParameter("SumRptCfgDesc", sumRptCfgDesc) :
                new ObjectParameter("SumRptCfgDesc", typeof(string));
    
            var fileFmtSKParameter = fileFmtSK.HasValue ?
                new ObjectParameter("FileFmtSK", fileFmtSK) :
                new ObjectParameter("FileFmtSK", typeof(long));
    
            var langSKParameter = langSK.HasValue ?
                new ObjectParameter("LangSK", langSK) :
                new ObjectParameter("LangSK", typeof(long));
    
            var fontSizeSKParameter = fontSizeSK.HasValue ?
                new ObjectParameter("FontSizeSK", fontSizeSK) :
                new ObjectParameter("FontSizeSK", typeof(long));
    
            var inclUMIndParameter = inclUMInd.HasValue ?
                new ObjectParameter("InclUMInd", inclUMInd) :
                new ObjectParameter("InclUMInd", typeof(bool));
    
            var inclNotCvrdIndParameter = inclNotCvrdInd.HasValue ?
                new ObjectParameter("InclNotCvrdInd", inclNotCvrdInd) :
                new ObjectParameter("InclNotCvrdInd", typeof(bool));
    
            var tierDisplSKParameter = tierDisplSK.HasValue ?
                new ObjectParameter("TierDisplSK", tierDisplSK) :
                new ObjectParameter("TierDisplSK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptCfg_Put_Result>("spSumRptCfg_Put", sumRptCfgSKParameter, sectionSKSortOrder_ListParameter, sumRptCfgNameParameter, sumRptCfgDescParameter, fileFmtSKParameter, langSKParameter, fontSizeSKParameter, inclUMIndParameter, inclNotCvrdIndParameter, tierDisplSKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spSumRptCfgTier_Post_Result> spSumRptCfgTier_Post(Nullable<long> sumRptCfgSK, Nullable<long> frmlrySK, string userId)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptCfgTier_Post_Result>("spSumRptCfgTier_Post", sumRptCfgSKParameter, frmlrySKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spSumRptCfgTier_Put_Result> spSumRptCfgTier_Put(Nullable<long> sumRptCfgSK, Nullable<long> frmlrySK, string frmlryTiersSelectedSKs_List, string tierDesc_List, string userId)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var frmlryTiersSelectedSKs_ListParameter = frmlryTiersSelectedSKs_List != null ?
                new ObjectParameter("FrmlryTiersSelectedSKs_List", frmlryTiersSelectedSKs_List) :
                new ObjectParameter("FrmlryTiersSelectedSKs_List", typeof(string));
    
            var tierDesc_ListParameter = tierDesc_List != null ?
                new ObjectParameter("TierDesc_List", tierDesc_List) :
                new ObjectParameter("TierDesc_List", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptCfgTier_Put_Result>("spSumRptCfgTier_Put", sumRptCfgSKParameter, frmlrySKParameter, frmlryTiersSelectedSKs_ListParameter, tierDesc_ListParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spSumRptCfg_GetAll_Result> spSumRptCfg_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptCfg_GetAll_Result>("spSumRptCfg_GetAll");
        }
    
        public virtual ObjectResult<spFormulary_GetAll_Result> spFormulary_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_GetAll_Result>("spFormulary_GetAll");
        }
    
        public virtual ObjectResult<spFormulary_PutHeader_Result> spFormulary_PutHeader(Nullable<long> frmlrySK, Nullable<long> lOBSK, Nullable<long> drugThrputcClsTypeSK, Nullable<long> drugRefDbSK, Nullable<int> drugPostObsltAlwdDays, string frmlryName, Nullable<bool> automaticallyAssignNewNDCsInd, Nullable<System.DateTime> efctvStartDt, Nullable<System.DateTime> efctvEndDt, string planType, string drugTypeFn, Nullable<bool> isExcludeOTC, string userId, Nullable<System.DateTimeOffset> inctvTs, Nullable<System.DateTimeOffset> delTs, Nullable<long> sumRptCfgSK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var lOBSKParameter = lOBSK.HasValue ?
                new ObjectParameter("LOBSK", lOBSK) :
                new ObjectParameter("LOBSK", typeof(long));
    
            var drugThrputcClsTypeSKParameter = drugThrputcClsTypeSK.HasValue ?
                new ObjectParameter("DrugThrputcClsTypeSK", drugThrputcClsTypeSK) :
                new ObjectParameter("DrugThrputcClsTypeSK", typeof(long));
    
            var drugRefDbSKParameter = drugRefDbSK.HasValue ?
                new ObjectParameter("DrugRefDbSK", drugRefDbSK) :
                new ObjectParameter("DrugRefDbSK", typeof(long));
    
            var drugPostObsltAlwdDaysParameter = drugPostObsltAlwdDays.HasValue ?
                new ObjectParameter("DrugPostObsltAlwdDays", drugPostObsltAlwdDays) :
                new ObjectParameter("DrugPostObsltAlwdDays", typeof(int));
    
            var frmlryNameParameter = frmlryName != null ?
                new ObjectParameter("FrmlryName", frmlryName) :
                new ObjectParameter("FrmlryName", typeof(string));
    
            var automaticallyAssignNewNDCsIndParameter = automaticallyAssignNewNDCsInd.HasValue ?
                new ObjectParameter("AutomaticallyAssignNewNDCsInd", automaticallyAssignNewNDCsInd) :
                new ObjectParameter("AutomaticallyAssignNewNDCsInd", typeof(bool));
    
            var efctvStartDtParameter = efctvStartDt.HasValue ?
                new ObjectParameter("EfctvStartDt", efctvStartDt) :
                new ObjectParameter("EfctvStartDt", typeof(System.DateTime));
    
            var efctvEndDtParameter = efctvEndDt.HasValue ?
                new ObjectParameter("EfctvEndDt", efctvEndDt) :
                new ObjectParameter("EfctvEndDt", typeof(System.DateTime));
    
            var planTypeParameter = planType != null ?
                new ObjectParameter("PlanType", planType) :
                new ObjectParameter("PlanType", typeof(string));
    
            var drugTypeFnParameter = drugTypeFn != null ?
                new ObjectParameter("DrugTypeFn", drugTypeFn) :
                new ObjectParameter("DrugTypeFn", typeof(string));
    
            var isExcludeOTCParameter = isExcludeOTC.HasValue ?
                new ObjectParameter("IsExcludeOTC", isExcludeOTC) :
                new ObjectParameter("IsExcludeOTC", typeof(bool));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var inctvTsParameter = inctvTs.HasValue ?
                new ObjectParameter("InctvTs", inctvTs) :
                new ObjectParameter("InctvTs", typeof(System.DateTimeOffset));
    
            var delTsParameter = delTs.HasValue ?
                new ObjectParameter("DelTs", delTs) :
                new ObjectParameter("DelTs", typeof(System.DateTimeOffset));
    
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_PutHeader_Result>("spFormulary_PutHeader", frmlrySKParameter, lOBSKParameter, drugThrputcClsTypeSKParameter, drugRefDbSKParameter, drugPostObsltAlwdDaysParameter, frmlryNameParameter, automaticallyAssignNewNDCsIndParameter, efctvStartDtParameter, efctvEndDtParameter, planTypeParameter, drugTypeFnParameter, isExcludeOTCParameter, userIdParameter, inctvTsParameter, delTsParameter, sumRptCfgSKParameter);
        }
    
        public virtual int spSumRptCfg_Activate(Nullable<long> sumRptCfgSK, string userId)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSumRptCfg_Activate", sumRptCfgSKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spFormulary_GetHeader_Result> spFormulary_GetHeader(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_GetHeader_Result>("spFormulary_GetHeader", frmlrySKParameter);
        }
    
        public virtual ObjectResult<spNewDrugsToMarket_FullTextMS_Result> spNewDrugsToMarket_FullTextMS(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNewDrugsToMarket_FullTextMS_Result>("spNewDrugsToMarket_FullTextMS", searchStringParameter);
        }
    
        public virtual ObjectResult<spFormularyReview_Get_Result> spFormularyReview_Get(Nullable<long> frmlrySK, Nullable<long> drugCatgSK, Nullable<long> eTC_ID, string aHFS_Id, Nullable<long> frmlryTierSK, string where)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            var eTC_IDParameter = eTC_ID.HasValue ?
                new ObjectParameter("ETC_ID", eTC_ID) :
                new ObjectParameter("ETC_ID", typeof(long));
    
            var aHFS_IdParameter = aHFS_Id != null ?
                new ObjectParameter("AHFS_Id", aHFS_Id) :
                new ObjectParameter("AHFS_Id", typeof(string));
    
            var frmlryTierSKParameter = frmlryTierSK.HasValue ?
                new ObjectParameter("FrmlryTierSK", frmlryTierSK) :
                new ObjectParameter("FrmlryTierSK", typeof(long));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyReview_Get_Result>("spFormularyReview_Get", frmlrySKParameter, drugCatgSKParameter, eTC_IDParameter, aHFS_IdParameter, frmlryTierSKParameter, whereParameter);
        }
    
        public virtual ObjectResult<spFormularyReview_GetV2_Result> spFormularyReview_GetV2(Nullable<long> frmlrySK, Nullable<long> drugCatgSK, Nullable<long> eTC_ID, string aHFS_Id, string gPI, Nullable<long> frmlryTierSK, string where)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            var eTC_IDParameter = eTC_ID.HasValue ?
                new ObjectParameter("ETC_ID", eTC_ID) :
                new ObjectParameter("ETC_ID", typeof(long));
    
            var aHFS_IdParameter = aHFS_Id != null ?
                new ObjectParameter("AHFS_Id", aHFS_Id) :
                new ObjectParameter("AHFS_Id", typeof(string));
    
            var gPIParameter = gPI != null ?
                new ObjectParameter("GPI", gPI) :
                new ObjectParameter("GPI", typeof(string));
    
            var frmlryTierSKParameter = frmlryTierSK.HasValue ?
                new ObjectParameter("FrmlryTierSK", frmlryTierSK) :
                new ObjectParameter("FrmlryTierSK", typeof(long));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyReview_GetV2_Result>("spFormularyReview_GetV2", frmlrySKParameter, drugCatgSKParameter, eTC_IDParameter, aHFS_IdParameter, gPIParameter, frmlryTierSKParameter, whereParameter);
        }
    
        public virtual ObjectResult<spSumRptCfg_Get_Result> spSumRptCfg_Get(Nullable<long> sumRptCfgSK)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptCfg_Get_Result>("spSumRptCfg_Get", sumRptCfgSKParameter);
        }
    
        public virtual ObjectResult<spSumRptCfgTier_Get_Result> spSumRptCfgTier_Get(Nullable<long> sumRptCfgSK, Nullable<long> frmlrySK)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptCfgTier_Get_Result>("spSumRptCfgTier_Get", sumRptCfgSKParameter, frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormularyExportRules_old_Result> spFormularyExportRules_old(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyExportRules_old_Result>("spFormularyExportRules_old", frmlrySKParameter);
        }
    
        public virtual int spJob_PutExport(Nullable<long> jobTypeSK, Nullable<long> frmlrySK, string userId)
        {
            var jobTypeSKParameter = jobTypeSK.HasValue ?
                new ObjectParameter("JobTypeSK", jobTypeSK) :
                new ObjectParameter("JobTypeSK", typeof(long));
    
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spJob_PutExport", jobTypeSKParameter, frmlrySKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spReportSumDrugListCfg_Result> spReportSumDrugListCfg(Nullable<long> frmlrySK, Nullable<long> orderBySK, Nullable<bool> inclNotCvrd, Nullable<long> langSK, Nullable<long> fontSizeSK, Nullable<long> tierDisplSK, string frmlryTiersSelectedSKs_List, string tierDesc_List, string groupBy, string medication_Info, string tier, string drug_Status, string criteria, Nullable<long> sumRptOTCSK, Nullable<double> sctnSortOrder)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var orderBySKParameter = orderBySK.HasValue ?
                new ObjectParameter("OrderBySK", orderBySK) :
                new ObjectParameter("OrderBySK", typeof(long));
    
            var inclNotCvrdParameter = inclNotCvrd.HasValue ?
                new ObjectParameter("InclNotCvrd", inclNotCvrd) :
                new ObjectParameter("InclNotCvrd", typeof(bool));
    
            var langSKParameter = langSK.HasValue ?
                new ObjectParameter("LangSK", langSK) :
                new ObjectParameter("LangSK", typeof(long));
    
            var fontSizeSKParameter = fontSizeSK.HasValue ?
                new ObjectParameter("FontSizeSK", fontSizeSK) :
                new ObjectParameter("FontSizeSK", typeof(long));
    
            var tierDisplSKParameter = tierDisplSK.HasValue ?
                new ObjectParameter("TierDisplSK", tierDisplSK) :
                new ObjectParameter("TierDisplSK", typeof(long));
    
            var frmlryTiersSelectedSKs_ListParameter = frmlryTiersSelectedSKs_List != null ?
                new ObjectParameter("FrmlryTiersSelectedSKs_List", frmlryTiersSelectedSKs_List) :
                new ObjectParameter("FrmlryTiersSelectedSKs_List", typeof(string));
    
            var tierDesc_ListParameter = tierDesc_List != null ?
                new ObjectParameter("TierDesc_List", tierDesc_List) :
                new ObjectParameter("TierDesc_List", typeof(string));
    
            var groupByParameter = groupBy != null ?
                new ObjectParameter("GroupBy", groupBy) :
                new ObjectParameter("GroupBy", typeof(string));
    
            var medication_InfoParameter = medication_Info != null ?
                new ObjectParameter("Medication_Info", medication_Info) :
                new ObjectParameter("Medication_Info", typeof(string));
    
            var tierParameter = tier != null ?
                new ObjectParameter("Tier", tier) :
                new ObjectParameter("Tier", typeof(string));
    
            var drug_StatusParameter = drug_Status != null ?
                new ObjectParameter("Drug_Status", drug_Status) :
                new ObjectParameter("Drug_Status", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var sumRptOTCSKParameter = sumRptOTCSK.HasValue ?
                new ObjectParameter("SumRptOTCSK", sumRptOTCSK) :
                new ObjectParameter("SumRptOTCSK", typeof(long));
    
            var sctnSortOrderParameter = sctnSortOrder.HasValue ?
                new ObjectParameter("SctnSortOrder", sctnSortOrder) :
                new ObjectParameter("SctnSortOrder", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportSumDrugListCfg_Result>("spReportSumDrugListCfg", frmlrySKParameter, orderBySKParameter, inclNotCvrdParameter, langSKParameter, fontSizeSKParameter, tierDisplSKParameter, frmlryTiersSelectedSKs_ListParameter, tierDesc_ListParameter, groupByParameter, medication_InfoParameter, tierParameter, drug_StatusParameter, criteriaParameter, sumRptOTCSKParameter, sctnSortOrderParameter);
        }
    
        public virtual ObjectResult<spFormularyImport_PutV1_Result> spFormularyImport_PutV1(string batchId, string userId)
        {
            var batchIdParameter = batchId != null ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyImport_PutV1_Result>("spFormularyImport_PutV1", batchIdParameter, userIdParameter);
        }
    
        public virtual int spFormularyImportRules_ClearPrior(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFormularyImportRules_ClearPrior", frmlrySKParameter);
        }
    
        public virtual ObjectResult<string> spReportSumDrugListCfg_Columns(string columnHeadings_List)
        {
            var columnHeadings_ListParameter = columnHeadings_List != null ?
                new ObjectParameter("ColumnHeadings_List", columnHeadings_List) :
                new ObjectParameter("ColumnHeadings_List", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spReportSumDrugListCfg_Columns", columnHeadings_ListParameter);
        }
    
        public virtual ObjectResult<spSumRptDrugSortBy_GetAll_Result> spSumRptDrugSortBy_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptDrugSortBy_GetAll_Result>("spSumRptDrugSortBy_GetAll");
        }
    
        public virtual ObjectResult<spSumRptOrgBy_GetAll1_Result> spSumRptOrgBy_GetAll1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptOrgBy_GetAll1_Result>("spSumRptOrgBy_GetAll1");
        }
    
        public virtual ObjectResult<spSumRptOTC_GetAll_Result> spSumRptOTC_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptOTC_GetAll_Result>("spSumRptOTC_GetAll");
        }
    
        public virtual ObjectResult<spSumRptRollUp_GetAll_Result> spSumRptRollUp_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptRollUp_GetAll_Result>("spSumRptRollUp_GetAll");
        }
    
        public virtual ObjectResult<spSumRptSctn_Get_Result> spSumRptSctn_Get(Nullable<long> sumRptCfgSctnSK)
        {
            var sumRptCfgSctnSKParameter = sumRptCfgSctnSK.HasValue ?
                new ObjectParameter("SumRptCfgSctnSK", sumRptCfgSctnSK) :
                new ObjectParameter("SumRptCfgSctnSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptSctn_Get_Result>("spSumRptSctn_Get", sumRptCfgSctnSKParameter);
        }
    
        public virtual ObjectResult<spSumRptSctn_Put_Result> spSumRptSctn_Put(Nullable<long> sumRptCfgSctnSK, string sctnCfgJSON)
        {
            var sumRptCfgSctnSKParameter = sumRptCfgSctnSK.HasValue ?
                new ObjectParameter("SumRptCfgSctnSK", sumRptCfgSctnSK) :
                new ObjectParameter("SumRptCfgSctnSK", typeof(long));
    
            var sctnCfgJSONParameter = sctnCfgJSON != null ?
                new ObjectParameter("SctnCfgJSON", sctnCfgJSON) :
                new ObjectParameter("SctnCfgJSON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptSctn_Put_Result>("spSumRptSctn_Put", sumRptCfgSctnSKParameter, sctnCfgJSONParameter);
        }
    
        public virtual ObjectResult<spSumRptOrgBy_GetAll_Result> spSumRptOrgBy_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptOrgBy_GetAll_Result>("spSumRptOrgBy_GetAll");
        }
    
        public virtual ObjectResult<spDrugListSearchFDBv5_Result> spDrugListSearchFDBv5(string whereCriteria, Nullable<long> bitmask, Nullable<long> formularySK, string orderByClasue, Nullable<int> startIndex, Nullable<int> count, string userId, Nullable<bool> criteriaChange, string eTC_ID, Nullable<System.Guid> sessionId, Nullable<long> drugListSK, Nullable<long> drugCatgSK, Nullable<long> cvrgPrptyPgmSK)
        {
            var whereCriteriaParameter = whereCriteria != null ?
                new ObjectParameter("WhereCriteria", whereCriteria) :
                new ObjectParameter("WhereCriteria", typeof(string));
    
            var bitmaskParameter = bitmask.HasValue ?
                new ObjectParameter("bitmask", bitmask) :
                new ObjectParameter("bitmask", typeof(long));
    
            var formularySKParameter = formularySK.HasValue ?
                new ObjectParameter("FormularySK", formularySK) :
                new ObjectParameter("FormularySK", typeof(long));
    
            var orderByClasueParameter = orderByClasue != null ?
                new ObjectParameter("OrderByClasue", orderByClasue) :
                new ObjectParameter("OrderByClasue", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var criteriaChangeParameter = criteriaChange.HasValue ?
                new ObjectParameter("CriteriaChange", criteriaChange) :
                new ObjectParameter("CriteriaChange", typeof(bool));
    
            var eTC_IDParameter = eTC_ID != null ?
                new ObjectParameter("ETC_ID", eTC_ID) :
                new ObjectParameter("ETC_ID", typeof(string));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(System.Guid));
    
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListSearchFDBv5_Result>("spDrugListSearchFDBv5", whereCriteriaParameter, bitmaskParameter, formularySKParameter, orderByClasueParameter, startIndexParameter, countParameter, userIdParameter, criteriaChangeParameter, eTC_IDParameter, sessionIdParameter, drugListSKParameter, drugCatgSKParameter, cvrgPrptyPgmSKParameter);
        }
    
        public virtual ObjectResult<spDrugListSearchMedispanV2_Result> spDrugListSearchMedispanV2(string whereCriteria, Nullable<long> bitmask, Nullable<long> formularySK, string orderByClasue, Nullable<int> startIndex, Nullable<int> count, string userId, Nullable<bool> criteriaChange, string gPI, Nullable<System.Guid> sessionId, Nullable<long> drugListSK, Nullable<long> drugCatgSK, Nullable<long> cvrgPrptyPgmSK)
        {
            var whereCriteriaParameter = whereCriteria != null ?
                new ObjectParameter("WhereCriteria", whereCriteria) :
                new ObjectParameter("WhereCriteria", typeof(string));
    
            var bitmaskParameter = bitmask.HasValue ?
                new ObjectParameter("bitmask", bitmask) :
                new ObjectParameter("bitmask", typeof(long));
    
            var formularySKParameter = formularySK.HasValue ?
                new ObjectParameter("FormularySK", formularySK) :
                new ObjectParameter("FormularySK", typeof(long));
    
            var orderByClasueParameter = orderByClasue != null ?
                new ObjectParameter("OrderByClasue", orderByClasue) :
                new ObjectParameter("OrderByClasue", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var criteriaChangeParameter = criteriaChange.HasValue ?
                new ObjectParameter("CriteriaChange", criteriaChange) :
                new ObjectParameter("CriteriaChange", typeof(bool));
    
            var gPIParameter = gPI != null ?
                new ObjectParameter("GPI", gPI) :
                new ObjectParameter("GPI", typeof(string));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(System.Guid));
    
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListSearchMedispanV2_Result>("spDrugListSearchMedispanV2", whereCriteriaParameter, bitmaskParameter, formularySKParameter, orderByClasueParameter, startIndexParameter, countParameter, userIdParameter, criteriaChangeParameter, gPIParameter, sessionIdParameter, drugListSKParameter, drugCatgSKParameter, cvrgPrptyPgmSKParameter);
        }
    
        public virtual ObjectResult<spFormularyReportSections_GetAll_Result> spFormularyReportSections_GetAll(Nullable<long> frmlrySK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormularyReportSections_GetAll_Result>("spFormularyReportSections_GetAll", frmlrySKParameter);
        }
    
        public virtual int spReportSumDrugListCfg_OTC(Nullable<long> frmlrySK, Nullable<long> orderBySK, Nullable<bool> inclNotCvrd, Nullable<long> langSK, Nullable<long> fontSizeSK, Nullable<long> tierDisplSK, string frmlryTiersSelectedSKs_List, string tierDesc_List, string groupBy, string medication_Info, string tier, string drug_Status, string criteria, Nullable<long> sumRptOTCSK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var orderBySKParameter = orderBySK.HasValue ?
                new ObjectParameter("OrderBySK", orderBySK) :
                new ObjectParameter("OrderBySK", typeof(long));
    
            var inclNotCvrdParameter = inclNotCvrd.HasValue ?
                new ObjectParameter("InclNotCvrd", inclNotCvrd) :
                new ObjectParameter("InclNotCvrd", typeof(bool));
    
            var langSKParameter = langSK.HasValue ?
                new ObjectParameter("LangSK", langSK) :
                new ObjectParameter("LangSK", typeof(long));
    
            var fontSizeSKParameter = fontSizeSK.HasValue ?
                new ObjectParameter("FontSizeSK", fontSizeSK) :
                new ObjectParameter("FontSizeSK", typeof(long));
    
            var tierDisplSKParameter = tierDisplSK.HasValue ?
                new ObjectParameter("TierDisplSK", tierDisplSK) :
                new ObjectParameter("TierDisplSK", typeof(long));
    
            var frmlryTiersSelectedSKs_ListParameter = frmlryTiersSelectedSKs_List != null ?
                new ObjectParameter("FrmlryTiersSelectedSKs_List", frmlryTiersSelectedSKs_List) :
                new ObjectParameter("FrmlryTiersSelectedSKs_List", typeof(string));
    
            var tierDesc_ListParameter = tierDesc_List != null ?
                new ObjectParameter("TierDesc_List", tierDesc_List) :
                new ObjectParameter("TierDesc_List", typeof(string));
    
            var groupByParameter = groupBy != null ?
                new ObjectParameter("GroupBy", groupBy) :
                new ObjectParameter("GroupBy", typeof(string));
    
            var medication_InfoParameter = medication_Info != null ?
                new ObjectParameter("Medication_Info", medication_Info) :
                new ObjectParameter("Medication_Info", typeof(string));
    
            var tierParameter = tier != null ?
                new ObjectParameter("Tier", tier) :
                new ObjectParameter("Tier", typeof(string));
    
            var drug_StatusParameter = drug_Status != null ?
                new ObjectParameter("Drug_Status", drug_Status) :
                new ObjectParameter("Drug_Status", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var sumRptOTCSKParameter = sumRptOTCSK.HasValue ?
                new ObjectParameter("SumRptOTCSK", sumRptOTCSK) :
                new ObjectParameter("SumRptOTCSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReportSumDrugListCfg_OTC", frmlrySKParameter, orderBySKParameter, inclNotCvrdParameter, langSKParameter, fontSizeSKParameter, tierDisplSKParameter, frmlryTiersSelectedSKs_ListParameter, tierDesc_ListParameter, groupByParameter, medication_InfoParameter, tierParameter, drug_StatusParameter, criteriaParameter, sumRptOTCSKParameter);
        }
    
        public virtual ObjectResult<spReportSumDrugListCfgV1_Result> spReportSumDrugListCfgV1(Nullable<long> frmlrySK, Nullable<long> sumRptOrgBySK, Nullable<long> orderBySK, Nullable<bool> inclNotCvrd, Nullable<long> langSK, Nullable<long> fontSizeSK, Nullable<long> tierDisplSK, string frmlryTiersSelectedSKs_List, string tierDesc_List, string groupBy, string medication_Info, string common_Name, string drug_Status, string criteria, Nullable<long> sumRptOTCSK, Nullable<long> rollUpSK)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var sumRptOrgBySKParameter = sumRptOrgBySK.HasValue ?
                new ObjectParameter("SumRptOrgBySK", sumRptOrgBySK) :
                new ObjectParameter("SumRptOrgBySK", typeof(long));
    
            var orderBySKParameter = orderBySK.HasValue ?
                new ObjectParameter("OrderBySK", orderBySK) :
                new ObjectParameter("OrderBySK", typeof(long));
    
            var inclNotCvrdParameter = inclNotCvrd.HasValue ?
                new ObjectParameter("InclNotCvrd", inclNotCvrd) :
                new ObjectParameter("InclNotCvrd", typeof(bool));
    
            var langSKParameter = langSK.HasValue ?
                new ObjectParameter("LangSK", langSK) :
                new ObjectParameter("LangSK", typeof(long));
    
            var fontSizeSKParameter = fontSizeSK.HasValue ?
                new ObjectParameter("FontSizeSK", fontSizeSK) :
                new ObjectParameter("FontSizeSK", typeof(long));
    
            var tierDisplSKParameter = tierDisplSK.HasValue ?
                new ObjectParameter("TierDisplSK", tierDisplSK) :
                new ObjectParameter("TierDisplSK", typeof(long));
    
            var frmlryTiersSelectedSKs_ListParameter = frmlryTiersSelectedSKs_List != null ?
                new ObjectParameter("FrmlryTiersSelectedSKs_List", frmlryTiersSelectedSKs_List) :
                new ObjectParameter("FrmlryTiersSelectedSKs_List", typeof(string));
    
            var tierDesc_ListParameter = tierDesc_List != null ?
                new ObjectParameter("TierDesc_List", tierDesc_List) :
                new ObjectParameter("TierDesc_List", typeof(string));
    
            var groupByParameter = groupBy != null ?
                new ObjectParameter("GroupBy", groupBy) :
                new ObjectParameter("GroupBy", typeof(string));
    
            var medication_InfoParameter = medication_Info != null ?
                new ObjectParameter("Medication_Info", medication_Info) :
                new ObjectParameter("Medication_Info", typeof(string));
    
            var common_NameParameter = common_Name != null ?
                new ObjectParameter("Common_Name", common_Name) :
                new ObjectParameter("Common_Name", typeof(string));
    
            var drug_StatusParameter = drug_Status != null ?
                new ObjectParameter("Drug_Status", drug_Status) :
                new ObjectParameter("Drug_Status", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var sumRptOTCSKParameter = sumRptOTCSK.HasValue ?
                new ObjectParameter("SumRptOTCSK", sumRptOTCSK) :
                new ObjectParameter("SumRptOTCSK", typeof(long));
    
            var rollUpSKParameter = rollUpSK.HasValue ?
                new ObjectParameter("RollUpSK", rollUpSK) :
                new ObjectParameter("RollUpSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportSumDrugListCfgV1_Result>("spReportSumDrugListCfgV1", frmlrySKParameter, sumRptOrgBySKParameter, orderBySKParameter, inclNotCvrdParameter, langSKParameter, fontSizeSKParameter, tierDisplSKParameter, frmlryTiersSelectedSKs_ListParameter, tierDesc_ListParameter, groupByParameter, medication_InfoParameter, common_NameParameter, drug_StatusParameter, criteriaParameter, sumRptOTCSKParameter, rollUpSKParameter);
        }
    
        public virtual ObjectResult<spMissingNDCFDB_Search_Result> spMissingNDCFDB_Search(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMissingNDCFDB_Search_Result>("spMissingNDCFDB_Search", searchStringParameter);
        }
    
        public virtual ObjectResult<spMissingNDCGPI_Search_Result> spMissingNDCGPI_Search(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMissingNDCGPI_Search_Result>("spMissingNDCGPI_Search", searchStringParameter);
        }
    
        public virtual int spReportSumDrugListPAorST(Nullable<long> frmlrySK, Nullable<long> langSK, Nullable<long> fontSizeSK, Nullable<long> tierDisplSK, string frmlryTiersSelectedSKs_List, string tierDesc_List, string groupBy, string medication_Info, string tier, string drug_Status, string criteria, string pAorSTReport, Nullable<double> sctnSortOrder)
        {
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var langSKParameter = langSK.HasValue ?
                new ObjectParameter("LangSK", langSK) :
                new ObjectParameter("LangSK", typeof(long));
    
            var fontSizeSKParameter = fontSizeSK.HasValue ?
                new ObjectParameter("FontSizeSK", fontSizeSK) :
                new ObjectParameter("FontSizeSK", typeof(long));
    
            var tierDisplSKParameter = tierDisplSK.HasValue ?
                new ObjectParameter("TierDisplSK", tierDisplSK) :
                new ObjectParameter("TierDisplSK", typeof(long));
    
            var frmlryTiersSelectedSKs_ListParameter = frmlryTiersSelectedSKs_List != null ?
                new ObjectParameter("FrmlryTiersSelectedSKs_List", frmlryTiersSelectedSKs_List) :
                new ObjectParameter("FrmlryTiersSelectedSKs_List", typeof(string));
    
            var tierDesc_ListParameter = tierDesc_List != null ?
                new ObjectParameter("TierDesc_List", tierDesc_List) :
                new ObjectParameter("TierDesc_List", typeof(string));
    
            var groupByParameter = groupBy != null ?
                new ObjectParameter("GroupBy", groupBy) :
                new ObjectParameter("GroupBy", typeof(string));
    
            var medication_InfoParameter = medication_Info != null ?
                new ObjectParameter("Medication_Info", medication_Info) :
                new ObjectParameter("Medication_Info", typeof(string));
    
            var tierParameter = tier != null ?
                new ObjectParameter("Tier", tier) :
                new ObjectParameter("Tier", typeof(string));
    
            var drug_StatusParameter = drug_Status != null ?
                new ObjectParameter("Drug_Status", drug_Status) :
                new ObjectParameter("Drug_Status", typeof(string));
    
            var criteriaParameter = criteria != null ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(string));
    
            var pAorSTReportParameter = pAorSTReport != null ?
                new ObjectParameter("PAorSTReport", pAorSTReport) :
                new ObjectParameter("PAorSTReport", typeof(string));
    
            var sctnSortOrderParameter = sctnSortOrder.HasValue ?
                new ObjectParameter("SctnSortOrder", sctnSortOrder) :
                new ObjectParameter("SctnSortOrder", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spReportSumDrugListPAorST", frmlrySKParameter, langSKParameter, fontSizeSKParameter, tierDisplSKParameter, frmlryTiersSelectedSKs_ListParameter, tierDesc_ListParameter, groupByParameter, medication_InfoParameter, tierParameter, drug_StatusParameter, criteriaParameter, pAorSTReportParameter, sctnSortOrderParameter);
        }
    
        public virtual ObjectResult<spReportTierLegend_Result> spReportTierLegend(Nullable<long> sumRptCfgSK)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportTierLegend_Result>("spReportTierLegend", sumRptCfgSKParameter);
        }
    
        public virtual ObjectResult<spReportUMLegend_Result> spReportUMLegend(Nullable<long> sumRptCfgSK)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportUMLegend_Result>("spReportUMLegend", sumRptCfgSKParameter);
        }
    
        public virtual ObjectResult<spSumRptCfgFrmlry_Put_Result> spSumRptCfgFrmlry_Put(Nullable<long> sumRptCfgSK, Nullable<long> frmlrySK, string userId)
        {
            var sumRptCfgSKParameter = sumRptCfgSK.HasValue ?
                new ObjectParameter("SumRptCfgSK", sumRptCfgSK) :
                new ObjectParameter("SumRptCfgSK", typeof(long));
    
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSumRptCfgFrmlry_Put_Result>("spSumRptCfgFrmlry_Put", sumRptCfgSKParameter, frmlrySKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spCvrgPrptyPgm_GetAll_Result> spCvrgPrptyPgm_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCvrgPrptyPgm_GetAll_Result>("spCvrgPrptyPgm_GetAll");
        }
    
        public virtual ObjectResult<spCvrgPrptyPgm_GetFormularies_Result> spCvrgPrptyPgm_GetFormularies(Nullable<long> cvrgPrptyPgmSK)
        {
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCvrgPrptyPgm_GetFormularies_Result>("spCvrgPrptyPgm_GetFormularies", cvrgPrptyPgmSKParameter);
        }
    
        public virtual ObjectResult<spPAPgm_Get_Result> spPAPgm_Get(Nullable<long> cvrgPrptyPgmSK)
        {
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPAPgm_Get_Result>("spPAPgm_Get", cvrgPrptyPgmSKParameter);
        }
    
        public virtual ObjectResult<spPAPgm_Put_Result> spPAPgm_Put(Nullable<long> pAPgmSK, Nullable<long> cvrgPrptyPgmSK, Nullable<long> frmlrySK, Nullable<long> drugRefDbSK, string cvrgPrptyPgmName, string claimsMsgCode, string claimsMsgText, string cvrgDurn, string exclCrtria, string reqMedclInfo, string ageRstrctn, string prescbrRstrctn, string othCrtria, string cvrdUses, string userId)
        {
            var pAPgmSKParameter = pAPgmSK.HasValue ?
                new ObjectParameter("PAPgmSK", pAPgmSK) :
                new ObjectParameter("PAPgmSK", typeof(long));
    
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            var drugRefDbSKParameter = drugRefDbSK.HasValue ?
                new ObjectParameter("DrugRefDbSK", drugRefDbSK) :
                new ObjectParameter("DrugRefDbSK", typeof(long));
    
            var cvrgPrptyPgmNameParameter = cvrgPrptyPgmName != null ?
                new ObjectParameter("CvrgPrptyPgmName", cvrgPrptyPgmName) :
                new ObjectParameter("CvrgPrptyPgmName", typeof(string));
    
            var claimsMsgCodeParameter = claimsMsgCode != null ?
                new ObjectParameter("ClaimsMsgCode", claimsMsgCode) :
                new ObjectParameter("ClaimsMsgCode", typeof(string));
    
            var claimsMsgTextParameter = claimsMsgText != null ?
                new ObjectParameter("ClaimsMsgText", claimsMsgText) :
                new ObjectParameter("ClaimsMsgText", typeof(string));
    
            var cvrgDurnParameter = cvrgDurn != null ?
                new ObjectParameter("CvrgDurn", cvrgDurn) :
                new ObjectParameter("CvrgDurn", typeof(string));
    
            var exclCrtriaParameter = exclCrtria != null ?
                new ObjectParameter("ExclCrtria", exclCrtria) :
                new ObjectParameter("ExclCrtria", typeof(string));
    
            var reqMedclInfoParameter = reqMedclInfo != null ?
                new ObjectParameter("ReqMedclInfo", reqMedclInfo) :
                new ObjectParameter("ReqMedclInfo", typeof(string));
    
            var ageRstrctnParameter = ageRstrctn != null ?
                new ObjectParameter("AgeRstrctn", ageRstrctn) :
                new ObjectParameter("AgeRstrctn", typeof(string));
    
            var prescbrRstrctnParameter = prescbrRstrctn != null ?
                new ObjectParameter("PrescbrRstrctn", prescbrRstrctn) :
                new ObjectParameter("PrescbrRstrctn", typeof(string));
    
            var othCrtriaParameter = othCrtria != null ?
                new ObjectParameter("OthCrtria", othCrtria) :
                new ObjectParameter("OthCrtria", typeof(string));
    
            var cvrdUsesParameter = cvrdUses != null ?
                new ObjectParameter("CvrdUses", cvrdUses) :
                new ObjectParameter("CvrdUses", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spPAPgm_Put_Result>("spPAPgm_Put", pAPgmSKParameter, cvrgPrptyPgmSKParameter, frmlrySKParameter, drugRefDbSKParameter, cvrgPrptyPgmNameParameter, claimsMsgCodeParameter, claimsMsgTextParameter, cvrgDurnParameter, exclCrtriaParameter, reqMedclInfoParameter, ageRstrctnParameter, prescbrRstrctnParameter, othCrtriaParameter, cvrdUsesParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spStepThrpyPgm_Get_Result> spStepThrpyPgm_Get(Nullable<long> cvrgPrptyPgmSK)
        {
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spStepThrpyPgm_Get_Result>("spStepThrpyPgm_Get", cvrgPrptyPgmSKParameter);
        }
    
        public virtual ObjectResult<spStepThrpyPgm_Put_Result> spStepThrpyPgm_Put(Nullable<long> stepThrpyPgmSK, Nullable<long> cvrgPrptyPgmSK, Nullable<long> drugRefDbSK, string cvrgPrptyPgmName, string claimsMsgCode, string claimsMsgText, Nullable<int> stepCnt, string userId)
        {
            var stepThrpyPgmSKParameter = stepThrpyPgmSK.HasValue ?
                new ObjectParameter("StepThrpyPgmSK", stepThrpyPgmSK) :
                new ObjectParameter("StepThrpyPgmSK", typeof(long));
    
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            var drugRefDbSKParameter = drugRefDbSK.HasValue ?
                new ObjectParameter("DrugRefDbSK", drugRefDbSK) :
                new ObjectParameter("DrugRefDbSK", typeof(long));
    
            var cvrgPrptyPgmNameParameter = cvrgPrptyPgmName != null ?
                new ObjectParameter("CvrgPrptyPgmName", cvrgPrptyPgmName) :
                new ObjectParameter("CvrgPrptyPgmName", typeof(string));
    
            var claimsMsgCodeParameter = claimsMsgCode != null ?
                new ObjectParameter("ClaimsMsgCode", claimsMsgCode) :
                new ObjectParameter("ClaimsMsgCode", typeof(string));
    
            var claimsMsgTextParameter = claimsMsgText != null ?
                new ObjectParameter("ClaimsMsgText", claimsMsgText) :
                new ObjectParameter("ClaimsMsgText", typeof(string));
    
            var stepCntParameter = stepCnt.HasValue ?
                new ObjectParameter("StepCnt", stepCnt) :
                new ObjectParameter("StepCnt", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spStepThrpyPgm_Put_Result>("spStepThrpyPgm_Put", stepThrpyPgmSKParameter, cvrgPrptyPgmSKParameter, drugRefDbSKParameter, cvrgPrptyPgmNameParameter, claimsMsgCodeParameter, claimsMsgTextParameter, stepCntParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spCvrgPrptyPgm_Copy_Result> spCvrgPrptyPgm_Copy(Nullable<long> cvrgPrptyPgmSK, string userId)
        {
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCvrgPrptyPgm_Copy_Result>("spCvrgPrptyPgm_Copy", cvrgPrptyPgmSKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spCvrgPrptyPgm_Delete_Result> spCvrgPrptyPgm_Delete(Nullable<long> cvrgPrptyPgmSK, string userId)
        {
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCvrgPrptyPgm_Delete_Result>("spCvrgPrptyPgm_Delete", cvrgPrptyPgmSKParameter, userIdParameter);
        }
    
        public virtual int spCvrgPrptyPgm_Finish(Nullable<long> cvrgPrptyPgmSK, string userId)
        {
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCvrgPrptyPgm_Finish", cvrgPrptyPgmSKParameter, userIdParameter);
        }
    
        public virtual int spCvrgPrptyPgmCache_Create(Nullable<long> cvrgPrptyPgmSK)
        {
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCvrgPrptyPgmCache_Create", cvrgPrptyPgmSKParameter);
        }
    
        public virtual ObjectResult<spCvrgPrptyPgmCrtriaGrp_CascadeDelete_Result> spCvrgPrptyPgmCrtriaGrp_CascadeDelete(Nullable<long> cvrgPrptyPgmSK, string userId)
        {
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCvrgPrptyPgmCrtriaGrp_CascadeDelete_Result>("spCvrgPrptyPgmCrtriaGrp_CascadeDelete", cvrgPrptyPgmSKParameter, userIdParameter);
        }
    
        public virtual ObjectResult<spCvrgPrptyPgmCrtriaGrp_GetAll_Result> spCvrgPrptyPgmCrtriaGrp_GetAll(Nullable<long> cvrgPrptyPgmSK)
        {
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCvrgPrptyPgmCrtriaGrp_GetAll_Result>("spCvrgPrptyPgmCrtriaGrp_GetAll", cvrgPrptyPgmSKParameter);
        }
    
        public virtual int spCvrgPrptyPgmCrtriaGrp_Put(Nullable<long> cvrgPrptyPgmSK, Nullable<long> cvrgPrptyPgmDtlSK, Nullable<int> stepNbr, Nullable<int> lookBackPerDays, Nullable<int> nbrFills, Nullable<int> trialDaysMin, string userId, ObjectParameter cvrgPrptyPgmSK_Upd)
        {
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            var cvrgPrptyPgmDtlSKParameter = cvrgPrptyPgmDtlSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmDtlSK", cvrgPrptyPgmDtlSK) :
                new ObjectParameter("CvrgPrptyPgmDtlSK", typeof(long));
    
            var stepNbrParameter = stepNbr.HasValue ?
                new ObjectParameter("StepNbr", stepNbr) :
                new ObjectParameter("StepNbr", typeof(int));
    
            var lookBackPerDaysParameter = lookBackPerDays.HasValue ?
                new ObjectParameter("LookBackPerDays", lookBackPerDays) :
                new ObjectParameter("LookBackPerDays", typeof(int));
    
            var nbrFillsParameter = nbrFills.HasValue ?
                new ObjectParameter("NbrFills", nbrFills) :
                new ObjectParameter("NbrFills", typeof(int));
    
            var trialDaysMinParameter = trialDaysMin.HasValue ?
                new ObjectParameter("TrialDaysMin", trialDaysMin) :
                new ObjectParameter("TrialDaysMin", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCvrgPrptyPgmCrtriaGrp_Put", cvrgPrptyPgmSKParameter, cvrgPrptyPgmDtlSKParameter, stepNbrParameter, lookBackPerDaysParameter, nbrFillsParameter, trialDaysMinParameter, userIdParameter, cvrgPrptyPgmSK_Upd);
        }
    
        public virtual ObjectResult<spDrugListSearchFDBv6_Result> spDrugListSearchFDBv6(string whereCriteria, Nullable<long> bitmask, Nullable<long> formularySK, string orderByClasue, Nullable<int> startIndex, Nullable<int> count, string userId, Nullable<bool> criteriaChange, string eTC_ID, Nullable<System.Guid> sessionId, Nullable<long> drugListSK, Nullable<long> drugCatgSK, Nullable<long> cvrgPrptyPgmSK)
        {
            var whereCriteriaParameter = whereCriteria != null ?
                new ObjectParameter("WhereCriteria", whereCriteria) :
                new ObjectParameter("WhereCriteria", typeof(string));
    
            var bitmaskParameter = bitmask.HasValue ?
                new ObjectParameter("bitmask", bitmask) :
                new ObjectParameter("bitmask", typeof(long));
    
            var formularySKParameter = formularySK.HasValue ?
                new ObjectParameter("FormularySK", formularySK) :
                new ObjectParameter("FormularySK", typeof(long));
    
            var orderByClasueParameter = orderByClasue != null ?
                new ObjectParameter("OrderByClasue", orderByClasue) :
                new ObjectParameter("OrderByClasue", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var criteriaChangeParameter = criteriaChange.HasValue ?
                new ObjectParameter("CriteriaChange", criteriaChange) :
                new ObjectParameter("CriteriaChange", typeof(bool));
    
            var eTC_IDParameter = eTC_ID != null ?
                new ObjectParameter("ETC_ID", eTC_ID) :
                new ObjectParameter("ETC_ID", typeof(string));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(System.Guid));
    
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListSearchFDBv6_Result>("spDrugListSearchFDBv6", whereCriteriaParameter, bitmaskParameter, formularySKParameter, orderByClasueParameter, startIndexParameter, countParameter, userIdParameter, criteriaChangeParameter, eTC_IDParameter, sessionIdParameter, drugListSKParameter, drugCatgSKParameter, cvrgPrptyPgmSKParameter);
        }
    
        public virtual ObjectResult<spDrugListSearchMedispanV3_Result> spDrugListSearchMedispanV3(string whereCriteria, Nullable<long> bitmask, Nullable<long> formularySK, string orderByClasue, Nullable<int> startIndex, Nullable<int> count, string userId, Nullable<bool> criteriaChange, string gPI, Nullable<System.Guid> sessionId, Nullable<long> drugListSK, Nullable<long> drugCatgSK, Nullable<long> cvrgPrptyPgmSK)
        {
            var whereCriteriaParameter = whereCriteria != null ?
                new ObjectParameter("WhereCriteria", whereCriteria) :
                new ObjectParameter("WhereCriteria", typeof(string));
    
            var bitmaskParameter = bitmask.HasValue ?
                new ObjectParameter("bitmask", bitmask) :
                new ObjectParameter("bitmask", typeof(long));
    
            var formularySKParameter = formularySK.HasValue ?
                new ObjectParameter("FormularySK", formularySK) :
                new ObjectParameter("FormularySK", typeof(long));
    
            var orderByClasueParameter = orderByClasue != null ?
                new ObjectParameter("OrderByClasue", orderByClasue) :
                new ObjectParameter("OrderByClasue", typeof(string));
    
            var startIndexParameter = startIndex.HasValue ?
                new ObjectParameter("StartIndex", startIndex) :
                new ObjectParameter("StartIndex", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var criteriaChangeParameter = criteriaChange.HasValue ?
                new ObjectParameter("CriteriaChange", criteriaChange) :
                new ObjectParameter("CriteriaChange", typeof(bool));
    
            var gPIParameter = gPI != null ?
                new ObjectParameter("GPI", gPI) :
                new ObjectParameter("GPI", typeof(string));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("SessionId", sessionId) :
                new ObjectParameter("SessionId", typeof(System.Guid));
    
            var drugListSKParameter = drugListSK.HasValue ?
                new ObjectParameter("DrugListSK", drugListSK) :
                new ObjectParameter("DrugListSK", typeof(long));
    
            var drugCatgSKParameter = drugCatgSK.HasValue ?
                new ObjectParameter("DrugCatgSK", drugCatgSK) :
                new ObjectParameter("DrugCatgSK", typeof(long));
    
            var cvrgPrptyPgmSKParameter = cvrgPrptyPgmSK.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK", cvrgPrptyPgmSK) :
                new ObjectParameter("CvrgPrptyPgmSK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDrugListSearchMedispanV3_Result>("spDrugListSearchMedispanV3", whereCriteriaParameter, bitmaskParameter, formularySKParameter, orderByClasueParameter, startIndexParameter, countParameter, userIdParameter, criteriaChangeParameter, gPIParameter, sessionIdParameter, drugListSKParameter, drugCatgSKParameter, cvrgPrptyPgmSKParameter);
        }
    
        public virtual ObjectResult<spCvrgPrptyPgm_FullTextSearch_Result> spCvrgPrptyPgm_FullTextSearch(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCvrgPrptyPgm_FullTextSearch_Result>("spCvrgPrptyPgm_FullTextSearch", searchStringParameter);
        }
    
        public virtual ObjectResult<spCvrgPrptyPgmCopy_Put_Result> spCvrgPrptyPgmCopy_Put(Nullable<long> cvrgPrptyPgmSK_From, string userId, Nullable<long> frmlrySK)
        {
            var cvrgPrptyPgmSK_FromParameter = cvrgPrptyPgmSK_From.HasValue ?
                new ObjectParameter("CvrgPrptyPgmSK_From", cvrgPrptyPgmSK_From) :
                new ObjectParameter("CvrgPrptyPgmSK_From", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var frmlrySKParameter = frmlrySK.HasValue ?
                new ObjectParameter("FrmlrySK", frmlrySK) :
                new ObjectParameter("FrmlrySK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCvrgPrptyPgmCopy_Put_Result>("spCvrgPrptyPgmCopy_Put", cvrgPrptyPgmSK_FromParameter, userIdParameter, frmlrySKParameter);
        }
    
        public virtual ObjectResult<spFormulary_GetAllWithPA_Result> spFormulary_GetAllWithPA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFormulary_GetAllWithPA_Result>("spFormulary_GetAllWithPA");
        }
    }
}
